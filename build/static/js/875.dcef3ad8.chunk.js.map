{"version":3,"file":"static/js/875.dcef3ad8.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/react-kakao-maps-sdk/src/util/kakaoMapApiLoader.ts","../node_modules/react-kakao-maps-sdk/src/hooks/useIsomorphicLayoutEffect.tsx","../node_modules/react-kakao-maps-sdk/src/hooks/useKakaoEvent.tsx","../node_modules/react-kakao-maps-sdk/src/components/Map.tsx","../node_modules/react-kakao-maps-sdk/src/hooks/useMap.tsx","../node_modules/react-kakao-maps-sdk/src/components/InfoWindow.tsx","../node_modules/react-kakao-maps-sdk/src/components/MarkerClusterer.tsx","../node_modules/react-kakao-maps-sdk/src/components/Marker.tsx","../node_modules/react-kakao-maps-sdk/src/components/MapMarker.tsx","../node_modules/react-kakao-maps-sdk/src/components/Roadview.tsx","../node_modules/react-kakao-maps-sdk/src/components/MapInfoWindow.tsx","../node_modules/react-kakao-maps-sdk/src/components/CustomOverlayMap.tsx","../node_modules/react-kakao-maps-sdk/src/components/MapTypeControl.tsx","../node_modules/react-kakao-maps-sdk/src/components/ZoomControl.tsx","../node_modules/react-kakao-maps-sdk/src/components/Circle.tsx","../node_modules/react-kakao-maps-sdk/src/components/Polyline.tsx","../node_modules/react-kakao-maps-sdk/src/components/Polygon.tsx","../node_modules/react-kakao-maps-sdk/src/components/Rectangle.tsx","../node_modules/react-kakao-maps-sdk/src/components/Ellipse.tsx","../node_modules/react-kakao-maps-sdk/src/components/AbstractOverlay.tsx","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/react-kakao-maps-sdk/src/hooks/useRoadview.tsx","../node_modules/react-kakao-maps-sdk/src/components/DrawingManager.tsx","../node_modules/react-kakao-maps-sdk/src/components/CustomOverlayRoadview.tsx","../node_modules/react-kakao-maps-sdk/src/components/RoadviewMarker.tsx","../node_modules/react-kakao-maps-sdk/src/components/RoadviewInfoWindow.tsx","../node_modules/react-kakao-maps-sdk/src/components/Toolbox.tsx","../node_modules/react-kakao-maps-sdk/src/components/StaticMap.tsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export type Libraries = (\"services\" | \"clusterer\" | \"drawing\")[]\n\nexport interface LoaderOptions {\n  /**\n   * script 객체 생성시 사용자 정의 id\n   */\n  id?: string\n  /**\n   * 발급 받은 Kakao 지도 Javscript API 키.\n   *\n   * @see [준비하기](https://apis.map.kakao.com/web/guide/#ready)\n   */\n  appkey: string\n  /**\n   * 사용하는 라이브러리 목록\n   *\n   * Kakao 지도 Javascript API 는 지도와 함께 사용할 수 있는 라이브러리 를 지원하고 있습니다.\n   * 라이브러리는 javascript API와 관련되어 있지만 조금 특화된 기능을 묶어둔 것을 말합니다. 이 기능은 추가로 불러와서 사용할 수 있도록 되어있습니다.\n   * 현재 사용할 수 있는 라이브러리는 다음과 같습니다.\n   *\n   * clusterer: 마커를 클러스터링 할 수 있는 클러스터러 라이브러리 입니다.\n   * services: 장소 검색 과 주소-좌표 변환 을 할 수 있는 services 라이브러리 입니다.\n   * drawing: 지도 위에 마커와 그래픽스 객체를 쉽게 그릴 수 있게 그리기 모드를 지원하는 drawing 라이브러리 입니다.\n   * 라이브러리는 계속해서 추가될 예정입니다.\n   */\n  libraries?: Libraries\n  /**\n   * 사용자 정의 Kakao 지도 javascript 경로 지정\n   *\n   * @default \"//dapi.kakao.com/v2/maps/sdk.js\"\n   */\n  url?: string\n  /**\n   * 보안을 위한 nonce 값 설정\n   */\n  nonce?: string\n  /**\n   * 스크립트 로드 재시도 횟수\n   */\n  retries?: number\n}\n\nexport enum LoaderStatus {\n  INITIALIZED,\n  LOADING,\n  SUCCESS,\n  FAILURE,\n}\n\nconst DEFAULT_ID = \"__reactKakaoMapsSdkloaderId\"\n\n/**\n * Kakao Map Api Loader\n *\n * `new Loader(options).load()` 함수를 이용하여 Api를 비동기적으로 삽입할 수 있습니다.\n *\n * 해당 Loader를 이용시 `react-kakao-maps-sdk` 내부에서 injection 되는 이벤트를 감지하여 kakao map api 로딩 이후에 렌더링을 진행합니다.\n */\nexport class Loader {\n  private static instance: Loader\n  private static loadcheckcallbacks: ((e?: ErrorEvent) => void)[] = []\n\n  public readonly id: string\n  public readonly appkey: string\n  public readonly url: string\n  public readonly libraries: Libraries\n  public readonly nonce: string | undefined\n  public readonly retries: number\n\n  private callbacks: ((e?: ErrorEvent) => void)[] = []\n  private done = false\n  private loading = false\n  private errors: ErrorEvent[] = []\n  private onerrorEvent: ErrorEvent | undefined\n\n  constructor({\n    appkey,\n    id = DEFAULT_ID,\n    libraries = [],\n    nonce,\n    retries = 3,\n    url = \"//dapi.kakao.com/v2/maps/sdk.js\",\n  }: LoaderOptions) {\n    this.id = id\n    this.appkey = appkey\n    this.libraries = libraries\n    this.nonce = nonce\n    this.retries = retries\n    this.url = url\n\n    if (Loader.instance) {\n      if (!Loader.equalOptions(this.options, Loader.instance.options)) {\n        throw new Error(\n          `Loader must not be called again with different options. ${JSON.stringify(\n            this.options\n          )} !== ${JSON.stringify(Loader.instance.options)}`\n        )\n      }\n\n      return Loader.instance\n    }\n    Loader.instance = this\n  }\n\n  public get options() {\n    return {\n      appkey: this.appkey,\n      id: this.id,\n      libraries: this.libraries,\n      nonce: this.nonce,\n      retries: this.retries,\n      url: this.url,\n    }\n  }\n\n  public static isLoaded(): Promise<boolean> {\n    return new Promise((resolve) => {\n      if (!Loader.instance) {\n        if (window.kakao && window.kakao.maps) {\n          /**\n           * kakao 객체가 autoload=false 되어 있거나, 아직 로딩이 완료 되지 못한 상황인 경우 load 처리를 실행하거나 기다리도록 처리 필요.\n           */\n          // @ts-ignore\n          if (window.kakao.maps.readyState !== 0) {\n            return resolve(true)\n          }\n          return window.kakao.maps.load(() => {\n            resolve(true)\n          })\n        }\n        return Loader.loadcheckcallbacks.push((e) => {\n          resolve(!e)\n        })\n      }\n\n      if (\n        Loader.instance.status === LoaderStatus.FAILURE ||\n        Loader.instance.status === LoaderStatus.INITIALIZED\n      ) {\n        return resolve(false)\n      }\n\n      if (Loader.instance.status === LoaderStatus.LOADING) {\n        Loader.loadcheckcallbacks.push((e) => resolve(!e))\n      }\n\n      return resolve(true)\n    })\n  }\n\n  public load(): Promise<typeof kakao> {\n    return new Promise((resolve, reject) => {\n      this.loadCallback((err?: ErrorEvent) => {\n        if (!err) {\n          resolve(window.kakao)\n        } else {\n          reject(err.error)\n        }\n      })\n    })\n  }\n\n  public get status(): LoaderStatus {\n    if (this.onerrorEvent) {\n      return LoaderStatus.FAILURE\n    }\n    if (this.done) {\n      return LoaderStatus.SUCCESS\n    }\n    if (this.loading) {\n      return LoaderStatus.LOADING\n    }\n    return LoaderStatus.INITIALIZED\n  }\n\n  private get failed(): boolean {\n    return this.done && !this.loading && this.errors.length >= this.retries + 1\n  }\n\n  private loadCallback(fn: (e?: ErrorEvent) => void): void {\n    this.callbacks.push(fn)\n    this.execute()\n  }\n\n  private resetIfRetryingFailed(): void {\n    if (this.failed) {\n      this.reset()\n    }\n  }\n\n  private reset(): void {\n    this.deleteScript()\n    this.done = false\n    this.loading = false\n    this.errors = []\n    this.onerrorEvent = undefined\n  }\n\n  private execute() {\n    this.resetIfRetryingFailed()\n\n    if (this.done) {\n      this.callback()\n    } else {\n      if (window.kakao && window.kakao.maps) {\n        console.warn(\n          \"Kakao Maps이 이미 외부 요소에 의해 로딩되어 있습니다.\" +\n            \"설정한 옵션과 일치 하지 않을 수 있으며, 이에 따른 예상치 동작이 발생할 수 있습니다.\"\n        )\n        this.callback()\n        return\n      }\n\n      if (!this.loading) {\n        this.loading = true\n        this.setScript()\n      }\n    }\n  }\n\n  private setScript() {\n    if (document.getElementById(this.id)) {\n      this.callback()\n    }\n\n    const url = this.createUrl()\n    const script = document.createElement(\"script\")\n\n    script.id = this.id\n    script.type = \"text/javascript\"\n    script.src = url\n    script.onerror = this.loadErrorCallback.bind(this)\n    script.onload = this.callback.bind(this)\n    script.defer = true\n    script.async = true\n\n    if (this.nonce) {\n      script.nonce = this.nonce\n    }\n\n    document.head.appendChild(script)\n  }\n\n  private loadErrorCallback(\n    event: Event | string,\n    source?: string,\n    lineno?: number,\n    colno?: number,\n    error?: Error\n  ): void {\n    this.errors.push({\n      event,\n      source,\n      // @ts-ignore\n      lineno,\n      // @ts-ignore\n      colno,\n      error,\n    })\n\n    if (this.errors.length <= this.retries) {\n      const delay = this.errors.length * 2 ** this.errors.length\n\n      console.log(`Failed to load Kakao Maps script, retrying in ${delay} ms.`)\n\n      setTimeout(() => {\n        this.deleteScript()\n        this.setScript()\n      }, delay)\n    } else {\n      this.onerrorEvent = this.errors[this.errors.length - 1]\n      this.callback()\n    }\n  }\n\n  public createUrl(): string {\n    let url = this.url\n    url += `?appkey=${this.appkey}`\n\n    if (this.libraries.length) {\n      url += `&libraries=${this.libraries.join(\",\")}`\n    }\n\n    url += `&autoload=false`\n\n    return url\n  }\n\n  private deleteScript() {\n    const script = document.getElementById(this.id)\n    if (script) {\n      script.remove()\n    }\n  }\n\n  private callback() {\n    kakao.maps.load(() => {\n      this.done = true\n      this.loading = false\n\n      this.callbacks.forEach((cb) => {\n        cb(this.onerrorEvent)\n      })\n      this.callbacks = []\n\n      Loader.loadcheckcallbacks.forEach((cb) => {\n        cb(this.onerrorEvent)\n      })\n      Loader.loadcheckcallbacks = []\n    })\n  }\n\n  private static equalOptions(\n    a: typeof Loader.prototype.options,\n    b: typeof Loader.prototype.options\n  ): boolean {\n    if (a.appkey !== b.appkey) return false\n    if (a.id !== b.id) return false\n\n    if (a.libraries.length !== b.libraries.length) return false\n    for (let i = 0; i < a.libraries.length; ++i) {\n      if (a.libraries[i] !== b.libraries[i]) return false\n    }\n    if (a.nonce !== b.nonce) return false\n    if (a.retries !== b.retries) return false\n    if (a.url !== b.url) return false\n    return true\n  }\n}\n","import { useEffect, useLayoutEffect } from \"react\"\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" && typeof document !== \"undefined\"\n    ? useLayoutEffect\n    : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import useIsomorphicLayoutEffect from \"./useIsomorphicLayoutEffect\"\n\nconst useKakaoEvent = <T extends kakao.maps.event.EventTarget>(\n  /**\n   * 이벤트 타겟\n   */\n  target: T | undefined,\n  /**\n   * event 타입\n   */\n  type: string,\n  /**\n   * 호출될 callback\n   */\n  callback: ((target: T, ...args: any[]) => void) | undefined\n) => {\n  useIsomorphicLayoutEffect(() => {\n    if (!target || !callback) return\n\n    const wrapCallback = (...arg: any[]) => {\n      if (arg === undefined) return callback(target)\n      else return callback(target, ...arg)\n    }\n\n    kakao.maps.event.addListener(target, type, wrapCallback)\n\n    return () => {\n      kakao.maps.event.removeListener(target, type, wrapCallback)\n    }\n  }, [target, type, callback])\n}\n\nexport default useKakaoEvent\n","import React, { useRef, useState, useImperativeHandle } from \"react\"\nimport useIsomorphicLayoutEffect from \"../hooks/useIsomorphicLayoutEffect\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport { Loader } from \"../util/kakaoMapApiLoader\"\n\nexport const KakaoMapContext = React.createContext<kakao.maps.Map>(\n  undefined as unknown as kakao.maps.Map\n)\n\nexport interface MapProps {\n  /**\n   * MapContinaer의 id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * MapContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * MapContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   */\n  center:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n\n  /**\n   * 중심을 이동시킬때 Panto를 사용할지 정합니다.\n   * @default false\n   */\n  isPanto?: boolean\n\n  /**\n   * 중심 좌표를 지정한 좌표 또는 영역으로 부드럽게 이동한다. 필요하면 확대 또는 축소도 수행한다.\n   * 만약 이동할 거리가 지도 화면의 크기보다 클 경우 애니메이션 없이 이동한다.\n   * padding 만큼 제외하고 영역을 계산하며, padding 을 지정하지 않으면 기본값으로 32가 사용된다.\n   */\n  padding?: number\n\n  /**\n   * 확대 수준 (기본값: 3)\n   */\n  level?: number\n\n  /**\n   * 최대 확대 수준\n   */\n  maxLevel?: number\n\n  /**\n   * 최소 확대 수준\n   */\n  minLevel?: number\n\n  /**\n   * 지도 종류 (기본값: 일반 지도)\n   */\n  mapTypeId?: kakao.maps.MapTypeId\n\n  /**\n   * 마우스 드래그, 휠, 모바일 터치를 이용한 시점 변경(이동, 확대, 축소) 가능 여부\n   */\n  draggable?: boolean\n\n  /**\n   * 마우스 휠이나 멀티터치로 지도 확대, 축소 기능을 막습니다. 상황에 따라 지도 확대, 축소 기능을 제어할 수 있습니다.\n   */\n  zoomable?: boolean\n\n  /**\n   * 마우스 휠, 모바일 터치를 이용한 확대 및 축소 가능 여부\n   */\n  scrollwheel?: boolean\n\n  /**\n   * 더블클릭 이벤트 및 더블클릭 확대 가능 여부\n   */\n  disableDoubleClick?: boolean\n\n  /**\n   * 더블클릭 확대 가능 여부\n   */\n  disableDoubleClickZoom?: boolean\n\n  /**\n   * 투영법 지정 (기본값: kakao.maps.ProjectionId.WCONG)\n   */\n  projectionId?: string\n\n  /**\n   * 지도 타일 애니메이션 설정 여부 (기본값: true)\n   */\n  tileAnimation?: boolean\n\n  /**\n   * 키보드의 방향키와 +, – 키로 지도 이동,확대,축소 가능 여부 (기본값: false)\n   */\n  keyboardShortcuts?:\n    | boolean\n    | {\n        /**\n         * 지도 이동 속도\n         */\n        speed: number\n      }\n\n  /**\n   * map 생성 후 해당 객체를 전달하는 함수\n   */\n  onCreate?: (map: kakao.maps.Map) => void\n\n  /**\n   * 중심 좌표가 변경되면 발생한다.\n   */\n  onCenterChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대 수준이 변경되기 직전 발생한다.\n   */\n  onZoomStart?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대 수준이 변경되면 발생한다.\n   */\n  onZoomChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도 영역이 변경되면 발생한다.\n   */\n  onBoundsChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도를 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도를 더블클릭하면 발생한다.\n   */\n  onDoubleClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도를 마우스 오른쪽 버튼으로 클릭하면 발생한다.\n   */\n  onRightClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도에서 마우스 커서를 이동하면 발생한다.\n   */\n  onMouseMove?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그를 시작할 때 발생한다.\n   */\n  onDragStart?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그를 하는 동안 발생한다.\n   */\n  onDrag?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그가 끝날 때 발생한다.\n   */\n  onDragEnd?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 중심 좌표나 확대 수준이 변경되면 발생한다.\n   * 단, 애니메이션 도중에는 발생하지 않는다.\n   */\n  onIdle?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대수준이 변경되거나 지도가 이동했을때 타일 이미지 로드가 모두 완료되면 발생한다.\n   * 지도이동이 미세하기 일어나 타일 이미지 로드가 일어나지 않은경우 발생하지 않는다.\n   */\n  onTileLoaded?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도 기본 타일(일반지도, 스카이뷰, 하이브리드)이 변경되면 발생한다.\n   */\n  onMaptypeidChanged?: (target: kakao.maps.Map) => void\n}\n\n/**\n * 기본적인 Map 객체를 생성하는 Comeponent 입니다.\n * props로 받는 `on*` 이벤트는 해당 `kakao.maps.Map` 객체를 함께 인자로 전달 합니다.\n *\n * `ref`를 통해 `map` 객체에 직접 접근하여 사용 또는 onCreate 이벤트를 이용하여 접근이 가능합니다.\n *\n * > *주의 사항* `Map`, `RoadView` 컴포넌트에 한하여, ref 객체가 컴포넌트 마운트 시점에 바로 초기화가 안될 수 있습니다.\n * >\n * > 컴포넌트 마운트 시점에 `useEffect` 를 활용하여, 특정 로직을 수행하고 싶은 경우 `ref` 객체를 사용하는 것보다\n * > `onCreate` 이벤트와 `useState`를 함께 활용하여 제어하는 것을 추천 드립니다.\n */\nconst Map = React.forwardRef<kakao.maps.Map, React.PropsWithChildren<MapProps>>(\n  (\n    {\n      id = \"react-kakao-maps-sdk-map-container\",\n      style,\n      children,\n      center,\n      isPanto = false,\n      padding = 32,\n      className,\n      disableDoubleClick,\n      disableDoubleClickZoom,\n      draggable,\n      zoomable,\n      keyboardShortcuts,\n      level,\n      maxLevel,\n      minLevel,\n      mapTypeId,\n      projectionId,\n      scrollwheel,\n      tileAnimation,\n      onBoundsChanged,\n      onCenterChanged,\n      onClick,\n      onDoubleClick,\n      onDrag,\n      onDragEnd,\n      onDragStart,\n      onIdle,\n      onMaptypeidChanged,\n      onMouseMove,\n      onRightClick,\n      onTileLoaded,\n      onZoomChanged,\n      onZoomStart,\n      onCreate,\n    },\n    ref\n  ) => {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [map, setMap] = useState<kakao.maps.Map>()\n    const container = useRef<HTMLDivElement>(null)\n\n    useIsomorphicLayoutEffect(() => {\n      Loader.isLoaded().then(setIsLoaded)\n    }, [])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!isLoaded) return\n\n      const MapContainer = container.current\n\n      if (!MapContainer) {\n        return\n      }\n\n      const initalMapCenter =\n        \"lat\" in center\n          ? new kakao.maps.LatLng(center.lat, center.lng)\n          : new kakao.maps.Coords(center.x, center.y)\n\n      const kakaoMap = new kakao.maps.Map(MapContainer, {\n        center: initalMapCenter,\n        disableDoubleClick: disableDoubleClick,\n        disableDoubleClickZoom: disableDoubleClickZoom,\n        draggable: draggable,\n        keyboardShortcuts: keyboardShortcuts,\n        level: level,\n        mapTypeId: mapTypeId,\n        projectionId: projectionId,\n        scrollwheel: scrollwheel,\n        tileAnimation: tileAnimation,\n      })\n\n      setMap(kakaoMap)\n\n      return () => {\n        MapContainer.innerHTML = \"\"\n      }\n    }, [\n      isLoaded,\n      disableDoubleClick,\n      disableDoubleClickZoom,\n      mapTypeId,\n      tileAnimation,\n    ])\n\n    useImperativeHandle(ref, () => map!, [map])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !onCreate) return\n      onCreate(map)\n    }, [map, onCreate])\n\n    // center position 변경시 map center 변경\n    useIsomorphicLayoutEffect(() => {\n      if (!map) return\n\n      let prevCenter = map.getCenter()\n      if (prevCenter instanceof kakao.maps.Coords) {\n        prevCenter = prevCenter.toLatLng()\n      }\n\n      const centerPosition =\n        \"lat\" in center\n          ? new kakao.maps.LatLng(center.lat, center.lng)\n          : new kakao.maps.Coords(center.x, center.y)\n\n      if (\n        (centerPosition instanceof kakao.maps.LatLng &&\n          centerPosition.equals(prevCenter)) ||\n        (centerPosition instanceof kakao.maps.Coords &&\n          centerPosition.toLatLng().equals(prevCenter))\n      ) {\n        return\n      }\n\n      if (isPanto) {\n        map.panTo(centerPosition, padding)\n      } else {\n        map.setCenter(centerPosition)\n      }\n      // @ts-ignore\n    }, [map, center.lat, center.lng, center.x, center.y])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || typeof draggable === \"undefined\") return\n      map.setDraggable(draggable)\n    }, [map, draggable])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || typeof zoomable === \"undefined\") return\n      map.setZoomable(zoomable)\n    }, [map, zoomable])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !keyboardShortcuts || typeof keyboardShortcuts !== \"boolean\")\n        return\n      map.setKeyboardShortcuts(keyboardShortcuts)\n    }, [map, keyboardShortcuts])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !level) return\n      map.setLevel(level)\n    }, [map, level])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !mapTypeId) return\n      map.setMapTypeId(mapTypeId)\n    }, [map, mapTypeId])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !projectionId) return\n      map.setProjectionId(projectionId)\n    }, [map, projectionId])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !maxLevel) return\n      map.setMaxLevel(maxLevel)\n    }, [map, maxLevel])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !minLevel) return\n      map.setMinLevel(minLevel)\n    }, [map, minLevel])\n\n    useKakaoEvent(map, \"bounds_changed\", onBoundsChanged)\n    useKakaoEvent(map, \"center_changed\", onCenterChanged)\n    useKakaoEvent(map, \"click\", onClick)\n    useKakaoEvent(map, \"dblclick\", onDoubleClick)\n    useKakaoEvent(map, \"drag\", onDrag)\n    useKakaoEvent(map, \"dragstart\", onDragStart)\n    useKakaoEvent(map, \"dragend\", onDragEnd)\n    useKakaoEvent(map, \"idle\", onIdle)\n    useKakaoEvent(map, \"maptypeid_changed\", onMaptypeidChanged)\n    useKakaoEvent(map, \"mousemove\", onMouseMove)\n    useKakaoEvent(map, \"rightclick\", onRightClick)\n    useKakaoEvent(map, \"tilesloaded\", onTileLoaded)\n    useKakaoEvent(map, \"zoom_changed\", onZoomChanged)\n    useKakaoEvent(map, \"zoom_start\", onZoomStart)\n\n    return (\n      <>\n        <div id={id} style={style} className={className} ref={container}></div>\n        {map && (\n          <KakaoMapContext.Provider value={map}>\n            {children}\n          </KakaoMapContext.Provider>\n        )}\n      </>\n    )\n  }\n)\n\nexport default Map\n","import { useContext } from \"react\"\nimport { KakaoMapContext } from \"../components/Map\"\n\n/**\n * kakao map 객체를 가져오는 hook 입니다.\n * Map 객체 내부가 아니라면 Error를 발생 시킵니다.\n */\nconst useMap = (componentName?: string) => {\n  const kakaoMap = useContext(KakaoMapContext)\n  if (!kakaoMap) {\n    throw new Error(\n      `${\n        componentName ? componentName + \" Component\" : \"useMap\"\n      } must exist inside Map Component!`\n    )\n  }\n\n  return kakaoMap\n}\n\nexport default useMap\n","import React, {\n  useLayoutEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n} from \"react\"\nimport ReactDom from \"react-dom\"\n\ninterface InfoWindowProps {\n  map: kakao.maps.Map | kakao.maps.Roadview\n  position: kakao.maps.LatLng | kakao.maps.Viewpoint\n  marker?: kakao.maps.Marker\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부\n   * @default false\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n   */\n  range?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\nconst InfoWindow = React.forwardRef<\n  kakao.maps.InfoWindow,\n  React.PropsWithChildren<InfoWindowProps>\n>(\n  (\n    {\n      map,\n      position,\n      marker,\n      children,\n      altitude,\n      disableAutoPan,\n      range,\n      removable,\n      zIndex,\n      onCreate,\n    },\n    ref\n  ) => {\n    const container = useRef(document.createElement(\"div\"))\n\n    const infoWindow = useMemo(() => {\n      const kakaoInfoWindow = new kakao.maps.InfoWindow({\n        altitude: altitude,\n        disableAutoPan: disableAutoPan,\n        range: range,\n        removable: removable,\n        zIndex: zIndex,\n        content: container.current,\n        position: position,\n      })\n      container.current.style.display = \"none\"\n      return kakaoInfoWindow\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [disableAutoPan, removable])\n\n    useImperativeHandle(ref, () => infoWindow, [infoWindow])\n\n    useLayoutEffect(() => {\n      infoWindow.open(map, marker)\n      return () => {\n        infoWindow.close()\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [map, marker])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(infoWindow)\n    }, [infoWindow, onCreate])\n\n    useLayoutEffect(() => {\n      if (!infoWindow) return\n      infoWindow.setPosition(position)\n    }, [infoWindow, position])\n\n    useLayoutEffect(() => {\n      if (!infoWindow || !altitude) return\n      infoWindow.setAltitude(altitude)\n    }, [infoWindow, altitude])\n\n    useLayoutEffect(() => {\n      if (!infoWindow || !range) return\n      infoWindow.setRange(range)\n    }, [infoWindow, range])\n\n    useLayoutEffect(() => {\n      if (!infoWindow || !zIndex) return\n      infoWindow.setZIndex(zIndex)\n    }, [infoWindow, zIndex])\n\n    return (\n      container.current.parentElement &&\n      ReactDom.createPortal(children, container.current.parentElement)\n    )\n  }\n)\n\nexport default InfoWindow\n","import React, { useLayoutEffect, useImperativeHandle, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport const KakaoMapMarkerClustererContext =\n  React.createContext<kakao.maps.MarkerClusterer>(\n    undefined as unknown as kakao.maps.MarkerClusterer\n  )\n\nexport interface MarkerClustererProps {\n  /**\n   * 클러스터의 격자 크기. 화면 픽셀 단위이며 해당 격자 영역 안에 마커가 포함되면 클러스터에 포함시킨다\n   * @default 60\n   */\n  gridSize?: number\n  /**\n   * 마커들의 좌표 평균을 클러스터 좌표 설정 여부\n   * @default false\n   */\n  averageCenter?: boolean\n  /**\n   * 클러스터링 할 지도의 최소 레벨 값. 지정한 숫자에 해당하는 레벨 미만에서는 클러스터링 하지 않는다\n   * @default 0\n   */\n  minLevel?: number\n  /**\n   * 클러스터링 할 최소 마커 수\n   * @default 2\n   */\n  minClusterSize?: number\n  /**\n   * 클러스터의 스타일. 여러개를 선언하면 calculator 로 구분된 사이즈 구간마다 서로 다른 스타일을 적용시킬 수 있다\n   */\n  styles?: React.CSSProperties[] | object[]\n  /**\n   * 클러스터에 표시할 문자열 또는 문자열 생성 함수.\n   * @default \"클러스터에 포함된 숫자\"\n   */\n  texts?: string[] | ((size: number) => string)\n  /**\n   * 클러스터 크기를 구분하는 값을 가진 배열 또는 구분값 생성함수\n   * @default [10, 100, 1000, 10000]\n   */\n  calculator?: number[] | ((size: number) => number[])\n  /**\n   * 클러스터 클릭 시 지도 확대 여부. true로 설정하면 클러스터 클릭 시 확대 되지 않는다\n   * @default false\n   */\n  disableClickZoom?: boolean\n  /**\n   * 클러스터 클릭 가능 여부 지정 옵션. false일 경우 클러스터의 clusterclick, clusterdblclick, clusterrightclick 이벤트가 발생하지 않으며, 커서가 변경되지 않는다.\n   * @default true\n   */\n  clickable?: boolean\n  /**\n   * 클러스터에 마우스 over/out 가능 여부 지정 옵션. false일 경우 클러스터의 clusterover, clusterout 이벤트가 발생하지 않는다.\n   * @default true\n   */\n  hoverable?: boolean\n\n  /**\n   * 클러스터 마커를 클릭 했을 때 발생한다.\n   * 이벤트 핸들러 함수 인자로는 Cluster 객체가 넘어온다.\n   * 클러스터 마커 클릭 시 지도가 줌인 되는 경우 원하는 Cluster 객체를 얻지 못할 수도 있다.\n   * 때문에 MarkerClusterer 를 생성할 때 disableClickZoom 옵션을 true로 설정하여\n   * 클러스터 마커를 클릭했을 때 지도가 줌인되지 않도록 설정 후 사용한다.\n   */\n  onClusterclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 마우스 오버 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 마우스 오버한 Cluster 객체가 넘어온다.\n   */\n  onClusterover?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 마우스 아웃 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 마우스 아웃된 Cluster 객체가 넘어온다.\n   */\n  onClusterout?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 더블클릭 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 더블클릭한 Cluster 객체가 넘어온다.\n   * MarkerClusterer 를 생성할 때 disableClickZoom 옵션을 true로 설정해야만 이벤트가 발생한다.\n   */\n  onClusterdblclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 오른쪽 클릭 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 오른쪽 클릭한 Cluster 객체가 넘어온다.\n   */\n  onClusterrightclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터링이 완료됐을 때 발생한다.\n   * 이벤트 핸들러 함수 인자로는 생성된 Cluster 객체 전체가 배열로 넘어온다.\n   */\n  onClustered?: (\n    target: kakao.maps.MarkerClusterer,\n    clusters: kakao.maps.Cluster[]\n  ) => void\n  /**\n   * MarkerClusterer 생성 후 해당 객체를 전달하는 함수\n   */\n  onCreate?: (target: kakao.maps.MarkerClusterer) => void\n}\n\nconst MarkerClusterer = React.forwardRef<\n  kakao.maps.MarkerClusterer,\n  React.PropsWithChildren<MarkerClustererProps>\n>(\n  (\n    {\n      children,\n      averageCenter,\n      calculator,\n      clickable,\n      disableClickZoom,\n      gridSize,\n      hoverable,\n      minClusterSize,\n      minLevel,\n      styles,\n      texts,\n      onClusterclick,\n      onClusterdblclick,\n      onClustered,\n      onClusterout,\n      onClusterover,\n      onClusterrightclick,\n      onCreate,\n    },\n    ref\n  ) => {\n    const map = useMap(`MarkerClusterer`)\n    const markerCluster = useMemo(() => {\n      if (!window.kakao.maps.MarkerClusterer) {\n        console.warn(\n          \"clusterer 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\"\n        )\n        return\n      }\n      return new kakao.maps.MarkerClusterer({\n        averageCenter,\n        calculator,\n        clickable,\n        disableClickZoom,\n        gridSize,\n        hoverable,\n        minClusterSize,\n        minLevel,\n        styles,\n        texts,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => markerCluster!, [markerCluster])\n\n    useLayoutEffect(() => {\n      markerCluster?.setMap(map)\n    }, [map, markerCluster])\n\n    useLayoutEffect(() => {\n      if (markerCluster && onCreate) onCreate(markerCluster)\n    }, [markerCluster, onCreate])\n\n    useLayoutEffect(() => {\n      if (markerCluster && gridSize) {\n        markerCluster.setGridSize(gridSize)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, gridSize])\n\n    useLayoutEffect(() => {\n      if (markerCluster && minClusterSize) {\n        markerCluster.setMinClusterSize(minClusterSize)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, minClusterSize])\n\n    useLayoutEffect(() => {\n      if (markerCluster && typeof averageCenter !== \"undefined\") {\n        markerCluster.setAverageCenter(averageCenter)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, averageCenter])\n\n    useLayoutEffect(() => {\n      if (markerCluster && minLevel) {\n        markerCluster.setMinLevel(minLevel)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, minLevel])\n\n    useLayoutEffect(() => {\n      if (markerCluster && texts) {\n        markerCluster.setTexts(texts)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, texts])\n\n    useLayoutEffect(() => {\n      if (markerCluster && calculator) {\n        markerCluster.setCalculator(calculator)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, calculator])\n\n    useLayoutEffect(() => {\n      if (markerCluster && styles) {\n        markerCluster.setStyles(styles)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, styles])\n\n    useKakaoEvent(markerCluster, \"clusterclick\", onClusterclick)\n    useKakaoEvent(markerCluster, \"clusterover\", onClusterover)\n    useKakaoEvent(markerCluster, \"clusterout\", onClusterout)\n    useKakaoEvent(markerCluster, \"clusterdblclick\", onClusterdblclick)\n    useKakaoEvent(markerCluster, \"clusterrightclick\", onClusterrightclick)\n    useKakaoEvent(markerCluster, \"clustered\", onClustered)\n\n    if (!markerCluster) {\n      return null\n    }\n\n    return (\n      <KakaoMapMarkerClustererContext.Provider value={markerCluster}>\n        {children}\n      </KakaoMapMarkerClustererContext.Provider>\n    )\n  }\n)\n\nexport default MarkerClusterer\n","import React, {\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport InfoWindow from \"./InfoWindow\"\nimport { KakaoMapMarkerClustererContext } from \"./MarkerClusterer\"\n\ninterface MarkerProps {\n  map: kakao.maps.Map | kakao.maps.Roadview\n  position: kakao.maps.LatLng | kakao.maps.Viewpoint\n\n  /**\n   * marker 생성 후 marker 객체를 전달하는 callback\n   */\n  onCreate?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * 마커의 이미지\n   */\n  image?: kakao.maps.MarkerImage\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 드래그 가능한 마커, 로드뷰에 올릴 경우에는 유효하지 않다.\n   */\n  draggable?: boolean\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * 로드뷰에 올라있는 마커의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 마커의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 마커는 로드뷰에서 보이지 않게 된다.\n   */\n  range?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n\n    /**\n     * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n     */\n    altitude?: number\n\n    /**\n     * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n     */\n    range?: number\n  }\n}\n\nconst Marker = React.forwardRef<\n  kakao.maps.Marker,\n  React.PropsWithChildren<MarkerProps>\n>(\n  (\n    {\n      map,\n      position,\n      children,\n      altitude,\n      clickable,\n      draggable,\n      image,\n      infoWindowOptions,\n      onCreate,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onMouseOut,\n      onMouseOver,\n      opacity,\n      range,\n      title,\n      zIndex,\n    },\n    ref\n  ) => {\n    const markerCluster = useContext(KakaoMapMarkerClustererContext)\n\n    // Marker 객체는 단 한번만 생성 되도록 함\n    const marker = useMemo(() => {\n      const kakaoMarker = new kakao.maps.Marker({\n        altitude,\n        clickable,\n        draggable,\n        image,\n        opacity,\n        range,\n        title,\n        zIndex,\n        position,\n      })\n\n      return kakaoMarker\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => marker, [marker])\n\n    useLayoutEffect(() => {\n      if (markerCluster) {\n        markerCluster.addMarker(marker)\n      } else {\n        marker.setMap(map)\n      }\n\n      return () => {\n        if (markerCluster) {\n          markerCluster.removeMarker(marker)\n        } else {\n          marker.setMap(null)\n        }\n      }\n    }, [map, markerCluster, marker])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(marker)\n    }, [marker, onCreate])\n\n    useKakaoEvent(marker, \"click\", onClick)\n    useKakaoEvent(marker, \"dragstart\", onDragStart)\n    useKakaoEvent(marker, \"dragend\", onDragEnd)\n    useKakaoEvent(marker, \"mouseout\", onMouseOut)\n    useKakaoEvent(marker, \"mouseover\", onMouseOver)\n\n    // position이 변경되면 객체를 갱신한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !position) return\n\n      marker.setPosition(position)\n    }, [map, marker, position])\n\n    // image 객체가 존재하면 이미지를 로드한다\n    useLayoutEffect(() => {\n      if (!map || !marker || !image) return\n\n      marker.setImage(image)\n    }, [map, marker, image])\n\n    // altitude 값이 있으면 높이를 조정한다\n    useLayoutEffect(() => {\n      if (!map || !marker || !altitude) return\n\n      marker.setAltitude(altitude)\n    }, [map, marker, altitude])\n\n    // clickable 값이 있으면 클릭이 가능하도록 한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || typeof clickable === \"undefined\") return\n\n      marker.setClickable(clickable)\n    }, [map, marker, clickable])\n\n    // draggable 값이 있으면 드래그가 가능하도록 한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || typeof draggable === \"undefined\") return\n\n      marker.setDraggable(draggable)\n    }, [map, marker, draggable])\n\n    // opacity 값이 있으면 투명도를 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !opacity) return\n\n      marker.setOpacity(opacity)\n    }, [map, marker, opacity])\n\n    // range 값이 있으면 마커의 가시반경을 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !range) return\n\n      marker.setRange(range)\n    }, [map, marker, range])\n\n    // title 값이 있으면 마커의 제목을 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !title) return\n\n      marker.setTitle(title)\n    }, [map, marker, title])\n\n    // zIndex 값이 있으면 마커의 zindex를 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !zIndex) return\n\n      marker.setZIndex(zIndex)\n    }, [map, marker, zIndex])\n\n    if (children)\n      return (\n        <InfoWindow\n          position={position}\n          map={map}\n          marker={marker}\n          altitude={infoWindowOptions?.altitude}\n          disableAutoPan={infoWindowOptions?.disableAutoPan}\n          range={infoWindowOptions?.range}\n          removable={infoWindowOptions?.removable}\n          zIndex={infoWindowOptions?.zIndex}\n        >\n          {children}\n        </InfoWindow>\n      )\n\n    return null\n  }\n)\n\nexport default Marker\n","import React, { useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\nimport Marker from \"./Marker\"\n\nexport interface MapMarkerProps {\n  /**\n   * 표시 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n\n  image?: {\n    /**\n     * 표시 이미지 src\n     */\n    src: string\n\n    /**\n     * 표시 이미지 크기\n     */\n    size: {\n      width: number\n      height: number\n    }\n\n    options?: {\n      /**\n       * 마커 이미지의 alt 속성값을 정의한다.\n       */\n      alt?: string\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역을 표현하는 좌표값\n       */\n      coords?: string\n\n      /**\n       * 마커의 좌표에 일치시킬 이미지 안의 좌표 (기본값: 이미지의 가운데 아래)\n       */\n      offset?: { x: number; y: number }\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역의 모양\n       */\n      shape?: \"default\" | \"rect\" | \"circle\" | \"poly\"\n\n      /**\n       * 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n       */\n      spriteOrigin?: { x: number; y: number }\n\n      /**\n       * 스프라이트 이미지의 전체 크기\n       */\n      spriteSize?: { width: number; height: number }\n    }\n  }\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * Maker 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.Marker) => void\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 드래그 가능한 마커, 로드뷰에 올릴 경우에는 유효하지 않다.\n   */\n  draggable?: boolean\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n  }\n}\n\n/**\n * Map에서 Marker를 생성할 때 사용 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `maker` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst MapMarker = React.forwardRef<\n  kakao.maps.Marker,\n  React.PropsWithChildren<MapMarkerProps>\n>(\n  (\n    {\n      image,\n      position,\n      children,\n      clickable,\n      draggable,\n      infoWindowOptions,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onMouseOut,\n      onMouseOver,\n      onCreate,\n      opacity,\n      title,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`MapMarker`)\n\n    const markerImage = useMemo(() => {\n      return (\n        image &&\n        new kakao.maps.MarkerImage(\n          image.src,\n          new kakao.maps.Size(image.size.width, image.size.height),\n          {\n            alt: image.options?.alt,\n            coords: image.options?.coords,\n            offset:\n              image.options?.offset &&\n              new kakao.maps.Point(\n                image.options?.offset.x,\n                image.options?.offset.y\n              ),\n            shape: image.options?.shape,\n            spriteOrigin:\n              image.options?.spriteOrigin &&\n              new kakao.maps.Point(\n                image.options?.spriteOrigin.x,\n                image.options?.spriteOrigin.y\n              ),\n            spriteSize:\n              image.options?.spriteSize &&\n              new kakao.maps.Size(\n                image.options?.spriteSize.width,\n                image.options?.spriteSize.height\n              ),\n          }\n        )\n      )\n    }, [image])\n\n    const markerPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      return new kakao.maps.Coords(position.x, position.y).toLatLng()\n\n      // @ts-ignore\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [position.lat, position.lng, position.x, position.y])\n\n    return (\n      <Marker\n        map={map}\n        position={markerPosition}\n        image={markerImage}\n        clickable={clickable}\n        draggable={draggable}\n        infoWindowOptions={infoWindowOptions}\n        onClick={onClick}\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        onMouseOut={onMouseOut}\n        onMouseOver={onMouseOver}\n        onCreate={onCreate}\n        opacity={opacity}\n        title={title}\n        zIndex={zIndex}\n        ref={ref}\n      >\n        {children}\n      </Marker>\n    )\n  }\n)\n\nexport default MapMarker\n","import React, { useImperativeHandle, useRef, useState } from \"react\"\nimport useIsomorphicLayoutEffect from \"../hooks/useIsomorphicLayoutEffect\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport { Loader } from \"../util/kakaoMapApiLoader\"\n\nexport const KakaoRoadviewContext = React.createContext<kakao.maps.Roadview>(\n  undefined as unknown as kakao.maps.Roadview\n)\n\nexport interface RoadviewProps {\n  /**\n   * roadviewContinaer의 id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * roadviewContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * roadviewContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   * 해당 lat와 lng에 해당하는 radius범위 안에서 가장가까운 Roadview을 선택합니다.\n   * 만약 없다면 lat, lng로 설정 됩니다.\n   */\n  position: {\n    lat: number\n    lng: number\n    radius: number\n  }\n\n  /**\n   * 로드뷰 시작 지역의 고유 아이디 값.\n   */\n  panoId?: number\n\n  /**\n   * panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수평 좌표값.\n   */\n  panoX?: number\n\n  /**\n   * panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수직 좌표값.\n   */\n  panoY?: number\n\n  /**\n   * 로드뷰 처음 실행시에 바라봐야 할 수평 각. 0이 정북방향. (0_360)\n   */\n  pan?: number\n\n  /**\n   * 로드뷰 처음 실행시에 바라봐야 할 수직 각.(-90_90)\n   */\n  tilt?: number\n\n  /**\n   * 로드뷰 줌 초기값.(-3_3)\n   */\n  zoom?: number\n\n  /**\n   * 로드뷰 생성후 해당 객체를 전달하는 callback.\n   */\n  onCreate?: (roadview: kakao.maps.Roadview) => void\n\n  /**\n   * 로드뷰가 초기화를 끝내면 발생한다.\n   */\n  onInit?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 파노라마 ID가 바뀌면 발생한다.\n   */\n  onPanoidChange?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 시점이 바뀌면 발생한다.\n   */\n  onViewpointChange?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 지도 좌표가 바뀌면 발생한다.\n   */\n  onPositionChanged?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * getNearestPanoId 동작 실패시 호출 합니다.\n   */\n  onErrorGetNearestPanoId?: (target: kakao.maps.Roadview) => void\n}\n\n/**\n * Roadview를 Roadview를 생성하는 컴포넌트 입니다.\n * props로 받는 `on*` 이벤트는 해당 `kakao.maps.Map` 객체를 반환 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `Roadview` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst Roadview = React.forwardRef<\n  kakao.maps.Roadview,\n  React.PropsWithChildren<RoadviewProps>\n>(\n  (\n    {\n      id = \"react-kakao-maps-sdk-roadview-container\",\n      style,\n      children,\n      position,\n      className,\n      pan,\n      panoId,\n      panoX,\n      panoY,\n      tilt,\n      zoom,\n      onCreate,\n      onInit,\n      onPanoidChange,\n      onPositionChanged,\n      onViewpointChange,\n      onErrorGetNearestPanoId,\n    },\n    ref\n  ) => {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [isLoading, setIsLoading] = useState(true)\n    const [roadview, setRoadview] = useState<kakao.maps.Roadview>()\n    const container = useRef<HTMLDivElement>(null)\n\n    useIsomorphicLayoutEffect(() => {\n      Loader.isLoaded().then(setIsLoaded)\n    }, [])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!isLoaded) return\n\n      const RoadviewContainer = container.current;\n\n      if (!RoadviewContainer) return\n\n      const kakaoRoadview = new kakao.maps.Roadview(RoadviewContainer, {\n        pan: pan,\n        panoId: panoId,\n        panoX: panoX,\n        panoY: panoY,\n        tilt: tilt,\n        zoom: zoom,\n      })\n\n      setRoadview(kakaoRoadview)\n\n      return () => {\n        RoadviewContainer.innerHTML = \"\"\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isLoaded, panoX, panoY, zoom])\n\n    useImperativeHandle(ref, () => roadview!, [roadview])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!roadview || !onCreate) return\n      onCreate(roadview)\n    }, [roadview, onCreate])\n\n    useIsomorphicLayoutEffect(() => {\n      if (\n        !roadview ||\n        panoId ||\n        (roadview.getPosition().getLat() === position.lat &&\n          roadview.getPosition().getLng() === position.lng)\n      )\n        return\n\n      const newPostion = new kakao.maps.LatLng(position.lat, position.lng)\n\n      new kakao.maps.RoadviewClient().getNearestPanoId(\n        newPostion,\n        position.radius,\n        (panoId) => {\n          if (panoId === null && onErrorGetNearestPanoId) {\n            onErrorGetNearestPanoId(roadview)\n          } else {\n            roadview.setPanoId(panoId, newPostion)\n          }\n        }\n      )\n    }, [\n      roadview,\n      panoId,\n      position.lat,\n      position.lng,\n      position.radius,\n      onErrorGetNearestPanoId,\n    ])\n\n    useIsomorphicLayoutEffect(() => {\n      if (\n        !roadview ||\n        !panoId ||\n        panoId === roadview.getPanoId() ||\n        (roadview.getPosition().getLat() === position.lat &&\n          roadview.getPosition().getLng() === position.lng)\n      )\n        return\n\n      const newPostion = new kakao.maps.LatLng(position.lat, position.lng)\n      roadview.setPanoId(panoId, newPostion)\n    }, [roadview, panoId, position.lat, position.lng])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!roadview) return\n\n      const prevViewpoint = roadview.getViewpoint()\n\n      if (prevViewpoint.pan === pan && prevViewpoint.tilt === tilt) return\n\n      if (pan) prevViewpoint.pan = pan\n      if (tilt) prevViewpoint.tilt = tilt\n      roadview.setViewpoint(prevViewpoint)\n    }, [roadview, pan, tilt])\n\n    useKakaoEvent(roadview, \"init\", (target) => {\n      setIsLoading(false)\n      if (onInit) onInit(target)\n    })\n    useKakaoEvent(roadview, \"panoid_changed\", onPanoidChange)\n    useKakaoEvent(roadview, \"viewpoint_changed\", onViewpointChange)\n    useKakaoEvent(roadview, \"position_changed\", onPositionChanged)\n\n    return (\n      <>\n        <div id={id} className={className} style={style} ref={container}></div>\n        {roadview && !isLoading && (\n          <KakaoRoadviewContext.Provider value={roadview}>\n            {children}\n          </KakaoRoadviewContext.Provider>\n        )}\n      </>\n    )\n  }\n)\n\nexport default Roadview\n","import React, { useMemo } from \"react\"\nimport InfoWindow from \"./InfoWindow\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapInfoWindowProps {\n  /**\n   * Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 인포윈도가 표시될 위치\n   */\n  position: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\n/**\n * Map 컴포넌트에서 InfoWindow를 그릴 때 사용됩니다.\n * `onCreate` 이벤트를 통해 생성 후 `infoWindow` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst MapInfoWindow = React.forwardRef<\n  kakao.maps.InfoWindow,\n  React.PropsWithChildren<MapInfoWindowProps>\n>(\n  (\n    { position, children, disableAutoPan, removable, zIndex, onCreate },\n    ref\n  ) => {\n    const map = useMap(`MapInfoWindow`)\n    const infoPosition = useMemo(() => {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }, [position.lat, position.lng])\n\n    return (\n      <InfoWindow\n        disableAutoPan={disableAutoPan}\n        removable={removable}\n        zIndex={zIndex}\n        map={map}\n        position={infoPosition}\n        onCreate={onCreate}\n        ref={ref}\n      >\n        {children}\n      </InfoWindow>\n    )\n  }\n)\n\nexport default MapInfoWindow\n","import React, {\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from \"react\"\nimport ReactDOM from \"react-dom\"\nimport useMap from \"../hooks/useMap\"\nimport { KakaoMapMarkerClustererContext } from \"./MarkerClusterer\"\n\nexport interface CustomOverlayMapProps {\n  /**\n   * 커스텀 오버레이의 좌표\n   */\n  position: {\n    lat: number\n    lng: number\n  }\n  /**\n   * true 로 설정하면 컨텐츠 영역을 클릭했을 경우 지도 이벤트를 막아준다.\n   */\n  clickable?: boolean\n\n  /**\n   * 컨텐츠의 x축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  xAnchor?: number\n\n  /**\n   * 컨텐츠의 y축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  yAnchor?: number\n\n  /**\n   * 커스텀 오버레이의 z-index\n   */\n  zIndex?: number\n\n  /**\n   * 커스텀 오버레이를 생성 후 해당 객체를 가지고 callback 함수를 실행 시켜줌\n   */\n  onCreate?: (customOverlay: kakao.maps.CustomOverlay) => void\n}\n\n/**\n * Map에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 이벤트 또는 `ref` 객체를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayMap = React.forwardRef<\n  kakao.maps.CustomOverlay,\n  React.PropsWithChildren<CustomOverlayMapProps>\n>(\n  (\n    { position, children, clickable, xAnchor, yAnchor, zIndex, onCreate },\n    ref\n  ) => {\n    const markerCluster = useContext(KakaoMapMarkerClustererContext)\n\n    const map = useMap(`CustomOverlayMap`)\n    const container = useRef(document.createElement(\"div\"))\n\n    const overlayPosition = useMemo(() => {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }, [position.lat, position.lng])\n\n    const overlay = useMemo(() => {\n      const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n        clickable: clickable,\n        xAnchor: xAnchor,\n        yAnchor: yAnchor,\n        zIndex: zIndex,\n        position: overlayPosition,\n        content: container.current,\n      })\n      container.current.style.display = \"none\"\n\n      return KakaoCustomOverlay\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [clickable, xAnchor, yAnchor])\n\n    useImperativeHandle(ref, () => overlay, [overlay])\n\n    useLayoutEffect(() => {\n      if (!map) return\n\n      if (markerCluster) {\n        markerCluster.addMarker(overlay)\n      } else {\n        overlay.setMap(map)\n      }\n\n      return () => {\n        if (markerCluster) {\n          markerCluster.removeMarker(overlay)\n        } else {\n          overlay.setMap(null)\n        }\n      }\n    }, [map, markerCluster, overlay])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(overlay)\n    }, [overlay, onCreate])\n\n    useLayoutEffect(() => {\n      overlay.setPosition(overlayPosition)\n    }, [overlay, overlayPosition])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      overlay.setZIndex(zIndex)\n    }, [overlay, zIndex])\n\n    return (\n      container.current.parentElement &&\n      ReactDOM.createPortal(children, container.current.parentElement)\n    )\n  }\n)\n\nexport default CustomOverlayMap\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapTypeControlProps {\n  /**\n   * MapTypeControl의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 일반 지도/하이브리드 간 지도 타입 전환 컨트롤을 생성한다.\n * 현재는 일반 지도/하이브리드 간 전환 컨트롤만 지원되며 다른 지도 타입을 제어하는 컨트롤이 필요할 경우에는 직접 구현해야 한다.\n */\nconst MapTypeControl = React.forwardRef<\n  kakao.maps.MapTypeControl,\n  MapTypeControlProps\n>(({ position = kakao.maps.ControlPosition.TOPRIGHT }, ref) => {\n  const map = useMap(`MapTypeControl`)\n\n  const mapTypeControl = useMemo(() => {\n    return new kakao.maps.MapTypeControl()\n  }, [])\n\n  useImperativeHandle(ref, () => mapTypeControl, [mapTypeControl])\n\n  useLayoutEffect(() => {\n    map.addControl(mapTypeControl, position)\n\n    return () => {\n      map.removeControl(mapTypeControl)\n    }\n  }, [map, mapTypeControl, position])\n\n  return null\n})\n\nexport default MapTypeControl\n","import React, { useEffect, useImperativeHandle, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface ZoomControlProps {\n  /**\n   * ZoomControl의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 확대·축소 컨트롤을 생성한다.\n */\nconst ZoomControl = React.forwardRef<kakao.maps.ZoomControl, ZoomControlProps>(\n  ({ position = kakao.maps.ControlPosition.RIGHT }, ref) => {\n    const map = useMap(`ZoomControl`)\n\n    const ZoomControl = useMemo(() => {\n      return new kakao.maps.ZoomControl()\n    }, [])\n\n    useImperativeHandle(ref, () => ZoomControl, [ZoomControl])\n\n    useEffect(() => {\n      map.addControl(ZoomControl, position)\n\n      return () => {\n        map.removeControl(ZoomControl)\n      }\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [map, position])\n\n    return null\n  }\n)\n\nexport default ZoomControl\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface CircleProps {\n  /**\n   * 중심 좌표를 지정합니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 원의 반지름 크기를 지정합니다 (미터 단위).\n   */\n  radius: number\n\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 원의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 원에 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 원에서 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원에서 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원에서 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원을 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Circle) => void\n}\n\n/**\n * Map 상에 원을 그립니다.\n */\nconst Circle = React.forwardRef<kakao.maps.Circle, CircleProps>(\n  (\n    {\n      center,\n      radius,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n      onMouseover,\n      onMouseout,\n      onMousemove,\n      onMousedown,\n      onClick,\n      onCreate,\n    },\n    ref\n  ) => {\n    const map = useMap(`Circle`)\n\n    const circleCenter = useMemo(() => {\n      return new kakao.maps.LatLng(center.lat, center.lng)\n    }, [center.lat, center.lng])\n\n    const circle = useMemo(() => {\n      return new kakao.maps.Circle({\n        center: circleCenter,\n        radius,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => circle, [circle])\n\n    useLayoutEffect(() => {\n      circle.setMap(map)\n      return () => {\n        circle.setMap(null)\n      }\n    }, [map, circle])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(circle)\n    }, [circle, onCreate])\n\n    useLayoutEffect(() => {\n      if (circle) circle.setPosition(circleCenter)\n    }, [circle, circleCenter])\n\n    useLayoutEffect(() => {\n      circle.setRadius(radius)\n    }, [circle, radius])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      circle.setZIndex(zIndex)\n    }, [circle, zIndex])\n\n    useLayoutEffect(() => {\n      circle.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      circle,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useKakaoEvent(circle, \"mouseover\", onMouseover)\n    useKakaoEvent(circle, \"mouseout\", onMouseout)\n    useKakaoEvent(circle, \"mousemove\", onMousemove)\n    useKakaoEvent(circle, \"mousedown\", onMousedown)\n    useKakaoEvent(circle, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Circle\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface PolylineProps {\n  path: LatLng[] | LatLng[][]\n  /**\n   * 화살표 여부\n   */\n  endArrow?: boolean\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Polyline) => void\n}\n\n/**\n * Map 상에 폴리라인을 그립니다.\n */\nconst Polyline = React.forwardRef<kakao.maps.Polyline, PolylineProps>(\n  (\n    {\n      path,\n      endArrow,\n      onClick,\n      onMousedown,\n      onMousemove,\n      onMouseout,\n      onMouseover,\n      onCreate,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`Polyline`)\n\n    const polyLinePath = useMemo(() => {\n      if ((path as LatLng[]).every((v) => v instanceof Array)) {\n        return (path as LatLng[][]).map((v) => {\n          return v.map((p) => new kakao.maps.LatLng(p.lat, p.lng))\n        })\n      }\n      return (path as LatLng[]).map((v) => {\n        return new kakao.maps.LatLng(v.lat, v.lng)\n      })\n    }, [path])\n\n    const polyline = useMemo(() => {\n      return new kakao.maps.Polyline({\n        path: polyLinePath,\n        endArrow,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => polyline, [polyline])\n\n    useLayoutEffect(() => {\n      polyline.setMap(map)\n      return () => polyline.setMap(null)\n    }, [map, polyline])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(polyline)\n    }, [polyline, onCreate])\n\n    useLayoutEffect(() => {\n      polyline.setOptions({\n        endArrow,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      polyline,\n      endArrow,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useLayoutEffect(() => {\n      polyline.setPath(polyLinePath)\n    }, [polyline, polyLinePath])\n\n    useLayoutEffect(() => {\n      if (zIndex) polyline.setZIndex(zIndex)\n    }, [polyline, zIndex])\n\n    useKakaoEvent(polyline, \"mouseover\", onMouseover)\n    useKakaoEvent(polyline, \"mouseout\", onMouseout)\n    useKakaoEvent(polyline, \"mousemove\", onMousemove)\n    useKakaoEvent(polyline, \"mousedown\", onMousedown)\n    useKakaoEvent(polyline, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Polyline\n","import React, { useLayoutEffect, useImperativeHandle, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface PolygonProps {\n  path: LatLng[] | LatLng[][]\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Polygon) => void\n}\n\n/**\n * Map 상에 다각형을 그립니다.\n */\nconst Polygon = React.forwardRef<kakao.maps.Polygon, PolygonProps>(\n  (\n    {\n      path,\n      onClick,\n      onMousedown,\n      onMousemove,\n      onMouseout,\n      onMouseover,\n      onCreate,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      fillColor,\n      fillOpacity,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`Polygon`)\n\n    const polygonPath = useMemo(() => {\n      if ((path as LatLng[]).every((v) => v instanceof Array)) {\n        return (path as LatLng[][]).map((v) => {\n          return v.map((p) => new kakao.maps.LatLng(p.lat, p.lng))\n        })\n      }\n      return (path as LatLng[]).map((v) => {\n        return new kakao.maps.LatLng(v.lat, v.lng)\n      })\n    }, [path])\n\n    const polygon = useMemo(() => {\n      return new kakao.maps.Polygon({\n        path: polygonPath,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => polygon, [polygon])\n\n    useLayoutEffect(() => {\n      polygon.setMap(map)\n      return () => polygon.setMap(null)\n    }, [map, polygon])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(polygon)\n    }, [polygon, onCreate])\n\n    useLayoutEffect(() => {\n      polygon.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      polygon,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useLayoutEffect(() => {\n      polygon.setPath(polygonPath)\n    }, [polygon, polygonPath])\n\n    useLayoutEffect(() => {\n      if (zIndex) polygon.setZIndex(zIndex)\n    }, [polygon, zIndex])\n\n    useKakaoEvent(polygon, \"mouseover\", onMouseover)\n    useKakaoEvent(polygon, \"mouseout\", onMouseout)\n    useKakaoEvent(polygon, \"mousemove\", onMousemove)\n    useKakaoEvent(polygon, \"mousedown\", onMousedown)\n    useKakaoEvent(polygon, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Polygon\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface RectangleProps {\n  bounds: {\n    sw: LatLng\n    ne: LatLng\n  }\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Rectangle) => void\n}\n\n/**\n * Map 상에 사각형을 그립니다.\n */\nconst Rectangle = React.forwardRef<kakao.maps.Rectangle, RectangleProps>(\n  (\n    {\n      bounds,\n      onClick,\n      onMousedown,\n      onMousemove,\n      onMouseout,\n      onMouseover,\n      onCreate,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      fillColor,\n      fillOpacity,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`Rectangle`)\n\n    const rectangleBounds = useMemo(() => {\n      return new kakao.maps.LatLngBounds(\n        new kakao.maps.LatLng(bounds.sw.lat, bounds.sw.lng),\n        new kakao.maps.LatLng(bounds.ne.lat, bounds.ne.lng)\n      )\n    }, [bounds])\n\n    const rectangle = useMemo(() => {\n      return new kakao.maps.Rectangle({\n        bounds: rectangleBounds,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => rectangle, [rectangle])\n\n    useLayoutEffect(() => {\n      rectangle.setMap(map)\n      return () => rectangle.setMap(null)\n    }, [map, rectangle])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(rectangle)\n    }, [rectangle, onCreate])\n\n    useLayoutEffect(() => {\n      rectangle.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      rectangle,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useLayoutEffect(() => {\n      rectangle.setBounds(rectangleBounds)\n    }, [rectangle, rectangleBounds])\n\n    useLayoutEffect(() => {\n      if (zIndex) rectangle.setZIndex(zIndex)\n    }, [rectangle, zIndex])\n\n    useKakaoEvent(rectangle, \"mouseover\", onMouseover)\n    useKakaoEvent(rectangle, \"mouseout\", onMouseout)\n    useKakaoEvent(rectangle, \"mousemove\", onMousemove)\n    useKakaoEvent(rectangle, \"mousedown\", onMousedown)\n    useKakaoEvent(rectangle, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Rectangle\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface EllipseProps {\n  /**\n   * 중심 좌표를 지정합니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 미터 단위의 x축 반지름\n   */\n  rx: number\n\n  /**\n   * 미터 단위의 y축 반지름\n   */\n  ry: number\n\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n\n  /**\n   * 타원의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 타원에 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 타원에서 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원에서 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원에서 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원을 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Ellipse) => void\n}\n\n/**\n * Map 상에 타원을 그립니다.\n */\nconst Ellipse = React.forwardRef<kakao.maps.Ellipse, EllipseProps>(\n  (\n    {\n      center,\n      rx,\n      ry,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n      onMouseover,\n      onMouseout,\n      onMousemove,\n      onMousedown,\n      onClick,\n      onCreate,\n    },\n    ref\n  ) => {\n    const map = useMap(`Ellipse`)\n\n    const ellipseCenter = useMemo(() => {\n      return new kakao.maps.LatLng(center.lat, center.lng)\n    }, [center.lat, center.lng])\n\n    const ellipse = useMemo(() => {\n      return new kakao.maps.Ellipse({\n        center: ellipseCenter,\n        rx,\n        ry,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => ellipse, [ellipse])\n\n    useLayoutEffect(() => {\n      ellipse.setMap(map)\n\n      return () => {\n        ellipse.setMap(null)\n      }\n    }, [map, ellipse])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(ellipse)\n    }, [ellipse, onCreate])\n\n    useLayoutEffect(() => {\n      if (ellipse) ellipse.setPosition(ellipseCenter)\n    }, [ellipse, ellipseCenter])\n\n    useLayoutEffect(() => {\n      ellipse.setRadius(rx, ry)\n    }, [ellipse, rx, ry])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      ellipse.setZIndex(zIndex)\n    }, [ellipse, zIndex])\n\n    useLayoutEffect(() => {\n      ellipse.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      ellipse,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useKakaoEvent(ellipse, \"mouseover\", onMouseover)\n    useKakaoEvent(ellipse, \"mouseout\", onMouseout)\n    useKakaoEvent(ellipse, \"mousemove\", onMousemove)\n    useKakaoEvent(ellipse, \"mousedown\", onMousedown)\n    useKakaoEvent(ellipse, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Ellipse\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface AbstractOverlayProps {\n  /**\n   * AbstractOverlay에서 필요한 `onAdd` 함수를 구현 합니다.\n   * 위치를 재조정할 필요가 있을 때 호출된다.\n   * 이 함수 내에서 엘리먼트의 위치를 잡아주어야 한다.\n   *\n   * 이때 arrow 함수가 아닌 일반 funtion으로 하여 this 바인딩이 되도록 하여 AbstractOverlay를 상속 받은 객체에 접근하여 필요 기능을 정의 합니다.\n   * ```tsx\n   * const panel = (this as kakao.maps.AbstractOverlay).getPanels().overlayLayer\n   * panel.appendChild(node.current)\n   * ```\n   */\n  draw: () => void\n  /**\n   * 지도에 올릴 때 호출된다.\n   * setMap(map) 을 실행하면 이 함수가 실행된다.\n   * 이 함수 내에서 생성된 `DOM` 객체를 MapPanels에 자식 노드로 넣어주도록 한다.\n   *\n   * ```tsx\n   * var projection = this.getProjection()\n   * var point = projection.pointFromCoords(positionLatlng)\n   * var width = node.current.offsetWidth\n   * var height = node.current.offsetHeight\n   *\n   * console.log(point, width, height)\n   *\n   * node.current.style.left = point.x - width / 2 + \"px\"\n   * node.current.style.top = point.y - height / 2 + \"px\"\n   * ```\n   */\n  onAdd: () => void\n\n  /**\n   * 지도에서 제거할 때 호출된다.\n   * setMap(null) 을 실행하면 이 함수가 실행된다.\n   * 이 함수 내에서 MapPanels에 자식 노드로 넣어준 엘리먼트를 제거하도록 한다.\n   *\n   * ```tsx\n   * this.node.parentNode.removeChild(this.node);\n   * ```\n   */\n  onRemove: () => void\n\n  /**\n   * 생성된 kakao.maps.AbstractOverlay 객체를 받을 수 있는 CallBack 함수 입니다.\n   */\n  onCreate?: (target: kakao.maps.AbstractOverlay) => void\n}\n\n/**\n * `API` 사용자가 직접 정의할 수 있는 오버레이.\n * AbstractOverlay를 상속 받아 사용할 객체를 생성하고 prototype을 연결해 준다.\n * 온전히 동작하는 오버레이를 만들고자 한다면 3가지 인터페이스 메소드( onAdd, draw, onRemove )를 구현해야 한다.\n *\n * 해당 Component 내부에서 `ReactAbstractOveraly` class를 만들어 `onAdd`, `draw`, `onRemove` 를 연결한 후 React Life Cycle에 맞춰 `setMap` 를 자동으로 호출 합니다.\n *\n * *경고* `draw`, `onAdd`, `onRemove` 의 경우 반드시 익명함수가 **아닌** 형태로 만들어서 전달해야 합니다.\n * `this.~` 를 통한 접근이 가능하니 해당 부분을 이용해서 구현 해주세요!\n *\n * ### Example Code\n *\n * ```jsx live\n * function () {\n *  const TooltipMarker = ({\n *    position,\n *  }) => {\n *    const node = useRef(document.createElement(\"div\"))\n *\n *    const positionLatlng = useMemo(() => {\n *      return new kakao.maps.LatLng(position.lat, position.lng)\n *    }, [position.lat, position.lng])\n *\n *    function onAdd() {\n *      const panel = this.getPanels()\n *        .overlayLayer\n *      panel.appendChild(node.current)\n *    }\n *\n *    function onRemove() {\n *      node.current.parentNode.removeChild(node.current)\n *    }\n *\n *    function draw() {\n *      var projection = this.getProjection()\n *      var point = projection.pointFromCoords(positionLatlng)\n *      var width = node.current.offsetWidth\n *      var height = node.current.offsetHeight\n *\n *      console.log(point, width, height)\n *\n *      node.current.style.left = point.x - width / 2 + \"px\"\n *      node.current.style.top = point.y - height / 2 + \"px\"\n *    }\n *\n *    useEffect(() => {\n *      node.current.style.position = \"absolute\"\n *      node.current.style.whiteSpace = \"nowrap\"\n *    }, [])\n *\n *    return (\n *      <>\n *        <AbstractOverlay onAdd={onAdd} onRemove={onRemove} draw={draw} />\n *        {ReactDOM.createPortal(\n *          <div\n *            style={{\n *              color: \"#000\",\n *              backgroundColor: \"#fff\",\n *              padding: \"5px\",\n *              borderRadius: \"15px\",\n *            }}\n *          >\n *            Hello Marker!\n *          </div>,\n *          node.current\n *        )}\n *      </>\n *    )\n *  }\n *\n *  return (\n *    <>\n *      <Map // 지도를 표시할 Container\n *        center={{\n *          // 지도의 중심좌표\n *          lat: 37.54699,\n *          lng: 127.09598,\n *        }}\n *        style={{\n *          // 지도의 크기\n *          width: \"100%\",\n *          height: \"450px\",\n *        }}\n *        level={3} // 지도의 확대 레벨\n *      >\n *        <TooltipMarker\n *          position={{\n *            lat: 37.54699,\n *            lng: 127.09598,\n *          }}\n *        />\n *      </Map>\n *    </>\n *  )\n *}\n * ```\n */\nconst AbstractOverlay = React.forwardRef<\n  kakao.maps.AbstractOverlay,\n  AbstractOverlayProps\n>(({ draw, onAdd, onRemove, onCreate }, ref) => {\n  const map = useMap()\n\n  const reactAbstractOverlay = useMemo(() => {\n    class ReactAbstractOveraly extends kakao.maps.AbstractOverlay {\n      constructor(draw: () => void, onAdd: () => void, onRemove: () => void) {\n        super()\n        this.draw = draw\n        this.onAdd = onAdd\n        this.onRemove = onRemove\n      }\n    }\n    const overlay = new ReactAbstractOveraly(draw, onAdd, onRemove)\n    return overlay\n  }, [draw, onAdd, onRemove])\n\n  useImperativeHandle(ref, () => reactAbstractOverlay, [reactAbstractOverlay])\n\n  useLayoutEffect(() => {\n    reactAbstractOverlay.setMap(map)\n\n    return () => {\n      reactAbstractOverlay.setMap(null)\n    }\n  }, [map, reactAbstractOverlay])\n\n  useLayoutEffect(() => {\n    if (onCreate) onCreate(reactAbstractOverlay)\n  }, [reactAbstractOverlay, onCreate])\n\n  return null\n})\n\nexport default AbstractOverlay\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import { useContext } from \"react\"\nimport { KakaoRoadviewContext } from \"../components/Roadview\"\n\n/**\n * kakao roadview 객체를 가져오는 hook 입니다.\n * Roadview 객체 내부가 아니라면 Error를 발생 시킵니다.\n */\nconst useRoadview = (componentName?: string) => {\n  const kakaoRoadview = useContext(KakaoRoadviewContext)\n  if (!kakaoRoadview) {\n    throw new Error(\n      `${\n        componentName ? componentName + \" Component\" : \"useRoadview\"\n      } must exist inside Roadview Component!`\n    )\n  }\n\n  return kakaoRoadview\n}\n\nexport default useRoadview\n","import React, {\n  ReactNode,\n  Ref,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport const DrawingManagerContext =\n  React.createContext<kakao.maps.drawing.DrawingManager>(\n    undefined as unknown as kakao.maps.drawing.DrawingManager\n  )\n\nexport type DrawingManagerProps<\n  T extends kakao.maps.drawing.OverlayType = kakao.maps.drawing.OverlayType\n> = Partial<kakao.maps.drawing.OverlayOptions> &\n  Pick<kakao.maps.drawing.OverlayOptions, `${T}Options`> & {\n    /**\n     * 마우스 오버 시 가이드 툴팁 표시 여부. ‘draw’, ‘drag’, ‘edit’ 3가지를 지정할 수 있다 (기본값: 모두 표시 안함)\n     * 예를들어 [‘draw’]로 설정하면 객체를 그릴때 가이드 툴팁이 표시된다\n     */\n    guideTooltip?: Array<\"draw\" | \"drag\" | \"edit\">\n    /**\n     * 사용할 그리기 요소 지정한다 (기본값: 모든 그리기 요소)\n     */\n    drawingMode?: Array<T>\n\n    /**\n     * 그리기 요소를 선택하면 발생한다.\n     */\n    onSelect?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기를 시작하면 발생한다.\n     */\n    onDrawstart?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기 시작 후, 마우스를 이동하면 발생한다.\n     */\n    onDraw?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기를 시작하면 발생한다.\n     */\n    onDrawend?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 다음 단계 그리기를 하면 발생한다. (Polyline, Polygon, Arrow 한정)\n     */\n    onDrawnext?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기를 취소하면 발생한다.\n     */\n    onCancle?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기 요소를 삭제하면 발생한다.\n     */\n    onRemove?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기 요소들의 상태가 변경되면 발생한다.\n     * 각 요소의 생성/수정/이동/삭제 동작과 undo 또는 redo 함수 호출이 이에 해당한다.\n     */\n    onStateChanged?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>\n    ) => void\n\n    /**\n     * 객체 생성후 해당 이벤트가 발생합니다.\n     */\n    onCreate?: (drawingManager: kakao.maps.drawing.DrawingManager<T>) => void\n\n    /**\n     * Toolbox에 대해서 추가할 때 사용합니다.\n     */\n    children?: ReactNode\n  }\n\nfunction useDrawingManagerEvent<T extends kakao.maps.drawing.OverlayType>(\n  target: kakao.maps.drawing.DrawingManager<T> | undefined,\n  type:\n    | \"drawstart\"\n    | \"draw\"\n    | \"drawend\"\n    | \"drawnext\"\n    | \"select\"\n    | \"cancel\"\n    | \"remove\"\n    | \"state_changed\",\n  callback:\n    | ((target: kakao.maps.drawing.DrawingManager<T>, ...args: any) => void)\n    | undefined\n) {\n  useLayoutEffect(() => {\n    if (!target || !callback) return\n\n    const wrapCallback = (...arg: any[]) => {\n      if (arg === undefined) return callback(target)\n      else return callback(target, ...arg)\n    }\n\n    // @ts-ignore\n    target.addListener(type, wrapCallback)\n  }, [callback, target, type])\n}\n\n/**\n * 그리기 관리자 객체를 생성하는 컴포넌트 입니다.\n *\n * 초기 생성자에 필요한 Props는 최초 렌더링에만 반영을 하고 이후에는 값이 변경되더라도 적용되지 않습니다.\n *\n * > `on~` 시리즈를 제외한 props는 초기 렌더링 이후 작동 안함\n *\n * DrawingManager는 이전 Map, Marker, CustomOverlay와 달리 Props를 통해 제어를 하는 것이 아닌 직접 DrawingManager 객체를 이용하여 제어를 해야 합니다.\n *\n * 이를 위해 ref 객체를 통해 `DrawingManager` 객체를 접근 할 수 있으며, 이를 활용하여 여러 이벤트 처리 및 제어가 가능합니다.\n *\n * TypeScript 사용자를 위한 `Generic`이 적용되어 있으므로, `ref` 객체에 대한 typing 및 `drawingMode`에 대해 확실하게 정의해야 합니다.\n *\n * ```tsx\n * const Main = () => {\n *     const managerRef = useRef<kakao.maps.drawing.DrawingManager<\n *       kakao.maps.drawing.OverlayType.POLYLINE\n *     >>(null);\n *\n *     function selectOverlay(type: string) {\n *       const manager = managerRef.current;\n *       manager.cancel();\n *       manager.select(kakao.maps.drawing.OverlayType.POLYLINE);\n *     }\n *\n *     return (\n *       <>\n *         <Map\n *           center={{\n *             // 지도의 중심좌표\n *             lat: 33.450701,\n *             lng: 126.570667,\n *           }}\n *           style={{\n *             width: \"100%\",\n *             height: \"450px\",\n *           }}\n *           level={3} // 지도의 확대 레벨\n *         >\n *           <DrawingManager\n *             ref={managerRef}\n *             drawingMode={[\n *               kakao.maps.drawing.OverlayType.POLYLINE,\n *             ]}\n *             guideTooltip={['draw', 'drag', 'edit']}\n *             polylineOptions={{\n *               draggable: true,\n *               removable: true,\n *               editable: true\n *             }}\n *           />\n *         </Map>\n *         <button onClick={(e) => {\n *           selectOverlay('POLYLINE')\n *         }}>선</button>\n *       </>\n *     )\n *   }\n * ```\n *\n * > JavaScript 코드 버전\n *\n * ```jsx live\n * function() {\n *   const Main = () => {\n *     const managerRef = useRef(null);\n *\n *     function selectOverlay() {\n *       const manager = managerRef.current;\n *       manager.cancel();\n *       manager.select(kakao.maps.drawing.OverlayType.POLYLINE);\n *     }\n *\n *     return (\n *       <>\n *         <Map\n *           center={{\n *             // 지도의 중심좌표\n *             lat: 33.450701,\n *             lng: 126.570667,\n *           }}\n *           style={{\n *             width: \"100%\",\n *             height: \"450px\",\n *           }}\n *           level={3} // 지도의 확대 레벨\n *         >\n *           <DrawingManager\n *             ref={managerRef}\n *             drawingMode={[\n *               kakao.maps.drawing.OverlayType.POLYLINE,\n *             ]}\n *             guideTooltip={['draw', 'drag', 'edit']}\n *             polylineOptions={{\n *               draggable: true,\n *               removable: true,\n *               editable: true\n *             }}\n *           />\n *         </Map>\n *         <button onClick={selectOverlay}>선</button>\n *       </>\n *     )\n *   }\n *   return (<Main />)\n * }\n * ```\n */\nconst DrawingManager = React.forwardRef(function <\n  T extends kakao.maps.drawing.OverlayType\n>(\n  {\n    arrowOptions,\n    circleOptions,\n    ellipseOptions,\n    markerOptions,\n    polygonOptions,\n    polylineOptions,\n    rectangleOptions,\n    drawingMode,\n    guideTooltip,\n    onSelect,\n    onDrawstart,\n    onDraw,\n    onDrawend,\n    onDrawnext,\n    onCancle,\n    onRemove,\n    onStateChanged,\n    onCreate,\n    children,\n  }: DrawingManagerProps<T>,\n  ref: Ref<kakao.maps.drawing.DrawingManager<T>>\n) {\n  const map = useMap(\"Toolbox\")\n\n  const drawingManager = useMemo(\n    () => {\n      if (!window.kakao.maps.drawing) {\n        console.warn(\n          \"drawing 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\"\n        )\n        return\n      }\n\n      // @ts-ignore\n      return new kakao.maps.drawing.DrawingManager({\n        map,\n        drawingMode,\n        guideTooltip,\n        arrowOptions,\n        circleOptions,\n        ellipseOptions,\n        markerOptions,\n        polygonOptions,\n        polylineOptions,\n        rectangleOptions,\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  )\n  useImperativeHandle(ref, () => drawingManager!, [drawingManager])\n\n  useLayoutEffect(() => {\n    drawingManager && onCreate && onCreate(drawingManager)\n  }, [drawingManager, onCreate])\n\n  useDrawingManagerEvent(drawingManager, \"select\", onSelect)\n  useDrawingManagerEvent(drawingManager, \"drawstart\", onDrawstart)\n  useDrawingManagerEvent(drawingManager, \"draw\", onDraw)\n  useDrawingManagerEvent(drawingManager, \"drawend\", onDrawend)\n  useDrawingManagerEvent(drawingManager, \"drawnext\", onDrawnext)\n  useDrawingManagerEvent(drawingManager, \"cancel\", onCancle)\n  useDrawingManagerEvent(drawingManager, \"remove\", onRemove)\n  useDrawingManagerEvent(drawingManager, \"state_changed\", onStateChanged)\n\n  if (!drawingManager) return null\n\n  return (\n    <DrawingManagerContext.Provider value={drawingManager}>\n      {children}\n    </DrawingManagerContext.Provider>\n  )\n}) as unknown as <\n  T extends kakao.maps.drawing.OverlayType = kakao.maps.drawing.OverlayType\n>(\n  _props: DrawingManagerProps<T> &\n    React.RefAttributes<kakao.maps.drawing.DrawingManager<T>>\n) => null\n\nexport default DrawingManager\n","import React, {\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from \"react\"\nimport ReactDOM from \"react-dom\"\nimport useRoadview from \"../hooks/useRoadview\"\n\nexport interface CustomOverlayRoadviewProps {\n  /**\n   * 커스텀 오버레이의 좌표\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n  /**\n   * true 로 설정하면 컨텐츠 영역을 클릭했을 경우 지도 이벤트를 막아준다.\n   */\n  clickable?: boolean\n\n  /**\n   * 컨텐츠의 x축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  xAnchor?: number\n\n  /**\n   * 컨텐츠의 y축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  yAnchor?: number\n\n  /**\n   * 커스텀 오버레이의 z-index\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰상에서 커스텀 오버레이의 높이(위치)를 지정한다.\n   * 단위는 m(미터)이며 현재 로드뷰의 바닥 높이를 기준으로 떨어져있는 높이를 말한다.\n   */\n  altitude?: number\n\n  /**\n   * 커스텀 오버레이의 가시반경을 설정한다.\n   * 로드뷰의 위치와 커스텀 오버레이의 위치 사이의 거리가 가시반경 이내일 경우에만 로드뷰상에 노출된다.\n   * 단위는 m(미터)이며 기본값은 500m이다.\n   */\n  range?: number\n\n  /**\n   * 커스텀 오버레이를 생성 후 해당 객체를 가지고 callback 함수를 실행 시켜줌\n   */\n  onCreate?: (customOverlay: kakao.maps.CustomOverlay) => void\n}\n\n/**\n * Roadview에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 이벤트 또는 `ref` 객체를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayRoadview = React.forwardRef<\n  kakao.maps.CustomOverlay,\n  React.PropsWithChildren<CustomOverlayRoadviewProps>\n>(\n  (\n    {\n      position,\n      children,\n      clickable,\n      xAnchor,\n      yAnchor,\n      zIndex,\n      altitude,\n      range,\n      onCreate,\n    },\n    ref\n  ) => {\n    const roadview = useRoadview(`CustomOverlayRoadview`)\n    const container = useRef(document.createElement(\"div\"))\n\n    const overlayPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      return new kakao.maps.Viewpoint(\n        position.pan,\n        position.tilt,\n        position.zoom,\n        position.panoId\n      )\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, [\n      // @ts-ignore\n      position.lat,\n      // @ts-ignore\n      position.lng,\n      // @ts-ignore\n      position.pan,\n      // @ts-ignore\n      position.tilt,\n      // @ts-ignore\n      position.zoom,\n      // @ts-ignore\n      position.panoId,\n    ])\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    const overlay = useMemo(() => {\n      const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n        clickable: clickable,\n        xAnchor: xAnchor,\n        yAnchor: yAnchor,\n        zIndex: zIndex,\n        position: overlayPosition,\n        content: container.current,\n      })\n      container.current.style.display = \"none\"\n      return KakaoCustomOverlay\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [clickable, xAnchor, yAnchor])\n\n    useImperativeHandle(ref, () => overlay, [overlay])\n\n    useLayoutEffect(() => {\n      if (!roadview) return\n\n      overlay.setMap(roadview)\n\n      return () => {\n        overlay.setMap(null)\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [overlay, roadview])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(overlay)\n    }, [overlay, onCreate])\n\n    useLayoutEffect(() => {\n      overlay.setPosition(overlayPosition)\n    }, [overlay, overlayPosition])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      overlay.setZIndex(zIndex)\n    }, [overlay, zIndex])\n\n    useLayoutEffect(() => {\n      if (!altitude) return\n      overlay.setAltitude(altitude)\n    }, [overlay, altitude])\n\n    useLayoutEffect(() => {\n      if (!range) return\n      overlay.setRange(range)\n    }, [overlay, range])\n\n    return (\n      container.current.parentElement &&\n      ReactDOM.createPortal(children, container.current.parentElement)\n    )\n  }\n)\n\nexport default CustomOverlayRoadview\n","import React, { useMemo } from \"react\"\nimport useRoadview from \"../hooks/useRoadview\"\nimport Marker from \"./Marker\"\n\nexport interface RoadviewMarkerProps {\n  /**\n   * 표시 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n\n  image?: {\n    /**\n     * 표시 이미지 src\n     */\n    src: string\n\n    /**\n     * 표시 이미지 크기\n     */\n    size: {\n      width: number\n      height: number\n    }\n\n    options?: {\n      /**\n       * 마커 이미지의 alt 속성값을 정의한다.\n       */\n      alt?: string\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역을 표현하는 좌표값\n       */\n      coords?: string\n\n      /**\n       * 마커의 좌표에 일치시킬 이미지 안의 좌표 (기본값: 이미지의 가운데 아래)\n       */\n      offset?: { x: number; y: number }\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역의 모양\n       */\n      shape?: \"default\" | \"rect\" | \"circle\" | \"poly\"\n\n      /**\n       * 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n       */\n      spriteOrigin?: { x: number; y: number }\n\n      /**\n       * 스프라이트 이미지의 전체 크기\n       */\n      spriteSize?: { width: number; height: number }\n    }\n  }\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * Maker 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.Marker) => void\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * 로드뷰에 올라있는 마커의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 마커의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 마커는 로드뷰에서 보이지 않게 된다.\n   */\n  range?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n  }\n}\n\n/**\n * Map에서 Marker를 생성할 때 사용 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `maker` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst RoadviewMarker = React.forwardRef<\n  kakao.maps.Marker,\n  React.PropsWithChildren<RoadviewMarkerProps>\n>(\n  (\n    {\n      image,\n      position,\n      children,\n      altitude,\n      clickable,\n      infoWindowOptions,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onMouseOut,\n      onMouseOver,\n      onCreate,\n      opacity,\n      range,\n      title,\n      zIndex,\n    },\n    ref\n  ) => {\n    const roadview = useRoadview(`RoadviewMarker`)\n\n    const markerImage = useMemo(() => {\n      return (\n        image &&\n        new kakao.maps.MarkerImage(\n          image.src,\n          new kakao.maps.Size(image.size.width, image.size.height),\n          {\n            alt: image.options?.alt,\n            coords: image.options?.coords,\n            offset:\n              image.options?.offset &&\n              new kakao.maps.Point(\n                image.options?.offset.x,\n                image.options?.offset.y\n              ),\n            shape: image.options?.shape,\n            spriteOrigin:\n              image.options?.spriteOrigin &&\n              new kakao.maps.Point(\n                image.options?.spriteOrigin.x,\n                image.options?.spriteOrigin.y\n              ),\n            spriteSize:\n              image.options?.spriteSize &&\n              new kakao.maps.Size(\n                image.options?.spriteSize.width,\n                image.options?.spriteSize.height\n              ),\n          }\n        )\n      )\n    }, [image])\n\n    const markerPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      if (\"x\" in position) {\n        return new kakao.maps.Coords(position.x, position.y).toLatLng()\n      }\n      return new kakao.maps.Viewpoint(\n        position.pan,\n        position.tilt,\n        position.zoom,\n        position.panoId\n      )\n\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, [\n      // @ts-ignore\n      position.lat,\n      // @ts-ignore\n      position.lng,\n      // @ts-ignore\n      position.x,\n      // @ts-ignore\n      position.y,\n      // @ts-ignore\n      position.pan,\n      // @ts-ignore\n      position.tilt,\n      // @ts-ignore\n      position.zoom,\n      // @ts-ignore\n      position?.panoId,\n    ])\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    return (\n      <Marker\n        map={roadview}\n        position={markerPosition}\n        image={markerImage}\n        altitude={altitude}\n        clickable={clickable}\n        infoWindowOptions={infoWindowOptions}\n        onClick={onClick}\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        onMouseOut={onMouseOut}\n        onMouseOver={onMouseOver}\n        onCreate={onCreate}\n        opacity={opacity}\n        range={range}\n        title={title}\n        zIndex={zIndex}\n        ref={ref}\n      >\n        {children}\n      </Marker>\n    )\n  }\n)\n\nexport default RoadviewMarker\n","import React, { useMemo } from \"react\"\nimport InfoWindow from \"./InfoWindow\"\nimport useRoadview from \"../hooks/useRoadview\"\n\nexport interface RoadviewInfoWindowProps {\n  /**\n   * 인포윈도가 표시될 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n   */\n  range?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\n/**\n * Map 컴포넌트에서 InfoWindow를 그릴 때 사용됩니다.\n * `onCreate` 이벤트를 통해 생성 후 `infoWindow` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst RoadviewInfoWindow = React.forwardRef<\n  kakao.maps.InfoWindow,\n  React.PropsWithChildren<RoadviewInfoWindowProps>\n>(\n  (\n    {\n      position,\n      children,\n      altitude,\n      disableAutoPan,\n      range,\n      removable,\n      zIndex,\n      onCreate,\n    },\n    ref\n  ) => {\n    const roadview = useRoadview(`RoadviewInfoWindow`)\n    const infoPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      return new kakao.maps.Viewpoint(\n        position.pan,\n        position.tilt,\n        position.zoom,\n        position.panoId\n      )\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, [\n      // @ts-ignore\n      position.lat,\n      // @ts-ignore\n      position.lng,\n      // @ts-ignore\n      position.pan,\n      // @ts-ignore\n      position.tilt,\n      // @ts-ignore\n      position.zoom,\n      // @ts-ignore\n      position.panoId,\n    ])\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    return (\n      <InfoWindow\n        altitude={altitude}\n        disableAutoPan={disableAutoPan}\n        range={range}\n        removable={removable}\n        zIndex={zIndex}\n        map={roadview}\n        position={infoPosition}\n        onCreate={onCreate}\n        ref={ref}\n      >\n        {children}\n      </InfoWindow>\n    )\n  }\n)\n\nexport default RoadviewInfoWindow\n","import React, {\n  Ref,\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport useMap from \"../hooks/useMap\"\nimport { DrawingManagerContext } from \"./DrawingManager\"\n\nexport type ToolboxProps = {\n  /**\n   * Toolbox의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 그리기 툴박스를 생성합니다.\n *\n * 해당 컴포넌트는 반드시 `DrawingManager` 컴포넌트의 자식으로 존재해야 합니다.\n */\nconst Toolbox = React.forwardRef(function (\n  { position }: ToolboxProps,\n  ref: Ref<kakao.maps.drawing.Toolbox>\n) {\n  position = position || kakao.maps.ControlPosition.TOP\n\n  const map = useMap(\"Toolbox\")\n  const drawingmanager = useContext(DrawingManagerContext)\n\n  if (!drawingmanager) {\n    throw new Error(\"Toolbox must exist inside DrawingManager Component!`\")\n  }\n\n  const toolbox = useMemo(\n    () =>\n      new kakao.maps.drawing.Toolbox({\n        drawingManager: drawingmanager,\n      }),\n    [drawingmanager]\n  )\n  useImperativeHandle(ref, () => toolbox, [toolbox])\n\n  useLayoutEffect(() => {\n    const element = toolbox.getElement()\n    map.addControl(element, position!)\n    return () => {\n      map.removeControl(element)\n    }\n  }, [map, toolbox, position])\n\n  return null\n})\n\nexport default Toolbox\n","import React, { useRef, useState, useImperativeHandle } from \"react\"\nimport useIsomorphicLayoutEffect from \"../hooks/useIsomorphicLayoutEffect\"\n\nexport interface StaticMapProps {\n  /**\n   * MapContinaer의 id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * MapContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * MapContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n\n  /**\n   * 확대 수준\n   * @default 3\n   */\n  level?: number\n\n  /**\n   * 지도 종류 (기본값: 일반 지도)\n   */\n  mapTypeId?: kakao.maps.MapTypeId\n\n  /**\n   * 이미지 지도에 표시할 마커 또는 마커 배열\n   */\n  marker:\n    | boolean\n    | {\n        /**\n         * 마커 tooltip에 표시될 내용\n         */\n        text?: string\n        /**\n         * 마커 포지션\n         */\n        position?: {\n          lat: number\n          lng: number\n        }\n      }\n    | Array<{\n        /**\n         * 마커 tooltip에 표시될 내용\n         */\n        text?: string\n        /**\n         * 마커 포지션\n         */\n        position: {\n          lat: number\n          lng: number\n        }\n      }>\n  /**\n   * StaticMap 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.StaticMap) => void\n}\n\nconst StaticMap = React.forwardRef<kakao.maps.StaticMap, StaticMapProps>(\n  (\n    {\n      id = \"react-kakao-maps-sdk-staticmap-container\",\n      style,\n      className,\n      center,\n      marker,\n      level,\n      mapTypeId,\n      onCreate,\n    },\n    ref\n  ) => {\n    const [map, setMap] = useState<kakao.maps.StaticMap>()\n    const container = useRef<HTMLDivElement>(null)\n\n    useIsomorphicLayoutEffect(() => {\n      if (!window.kakao) {\n        console.warn(\n          \"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\"\n        )\n        return\n      }\n\n      const mapContainer = container.current\n      if (!mapContainer) return\n\n      kakao.maps.load(() => {\n        const _marker = (() => {\n          if (Array.isArray(marker)) {\n            return marker.map((mk) => {\n              return {\n                ...mk,\n                position: new kakao.maps.LatLng(\n                  mk.position.lat,\n                  mk.position.lng\n                ),\n              }\n            })\n          }\n          if (typeof marker === \"object\") {\n            if (!!marker.position) {\n              return {\n                ...marker,\n                position: new kakao.maps.LatLng(\n                  marker.position.lat,\n                  marker.position.lng\n                ),\n              }\n            }\n            return marker as { text: string }\n          }\n          return marker\n        })()\n        const kakaoStaticMap = new kakao.maps.StaticMap(mapContainer, {\n          center: new kakao.maps.LatLng(center.lat, center.lng),\n          level,\n          mapTypeId,\n          marker: _marker,\n        })\n\n        setMap(kakaoStaticMap)\n      })\n    }, [JSON.stringify(marker)])\n\n    useImperativeHandle(ref, () => map!, [map])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map) map.setCenter(new kakao.maps.LatLng(center.lat, center.lng))\n    }, [map, center.lat, center.lng])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map && level) map.setLevel(level)\n    }, [map, level])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map && mapTypeId) map.setMapTypeId(mapTypeId)\n    }, [map, mapTypeId])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map && onCreate) onCreate(map)\n    }, [map, onCreate])\n\n    return (\n      <div id={id} style={style} className={className} ref={container}></div>\n    )\n  }\n)\n\nexport default StaticMap\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_typeof","Symbol","iterator","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_getPrototypeOf","getPrototypeOf","_possibleConstructorReturn","self","TypeError","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","result","Super","NewTarget","this","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","LoaderStatus","useIsomorphicLayoutEffect","window","document","useLayoutEffect","useEffect","useKakaoEvent","type","callback","wrapCallback","arg","kakao","maps","event","addListener","removeListener","Loader","appkey","id","libraries","nonce","retries","url","callbacks","done","loading","errors","onerrorEvent","equalOptions","options","Error","JSON","stringify","isLoaded","load","Promise","resolve","reject","loadCallback","err","error","status","FAILURE","SUCCESS","LOADING","INITIALIZED","failed","fn","execute","resetIfRetryingFailed","reset","deleteScript","console","warn","setScript","getElementById","createUrl","script","createElement","src","onerror","loadErrorCallback","onload","defer","async","head","appendChild","lineno","colno","delay","log","setTimeout","join","remove","cb","loadcheckcallbacks","readyState","a","b","KakaoMapContext","React","createContext","Map","ref","style","children","center","isPanto","padding","className","disableDoubleClick","disableDoubleClickZoom","draggable","zoomable","keyboardShortcuts","level","maxLevel","minLevel","mapTypeId","projectionId","scrollwheel","tileAnimation","onBoundsChanged","onCenterChanged","onClick","onDoubleClick","onDrag","onDragEnd","onDragStart","onIdle","onMaptypeidChanged","onMouseMove","onRightClick","onTileLoaded","onZoomChanged","onZoomStart","onCreate","useState","setIsLoaded","map","setMap","container","useRef","then","MapContainer","current","initalMapCenter","LatLng","lat","lng","Coords","x","y","kakaoMap","innerHTML","useImperativeHandle","prevCenter","getCenter","toLatLng","centerPosition","equals","panTo","setCenter","setDraggable","setZoomable","setKeyboardShortcuts","setLevel","setMapTypeId","setProjectionId","setMaxLevel","setMinLevel","Provider","useMap","componentName","useContext","InfoWindow","position","marker","altitude","disableAutoPan","range","removable","zIndex","infoWindow","useMemo","kakaoInfoWindow","content","display","open","close","setPosition","setAltitude","setRange","setZIndex","parentElement","ReactDom","KakaoMapMarkerClustererContext","Marker","averageCenter","calculator","clickable","disableClickZoom","gridSize","hoverable","minClusterSize","styles","texts","onClusterclick","onClusterdblclick","onClustered","onClusterout","onClusterover","onClusterrightclick","markerCluster","MarkerClusterer","setGridSize","redraw","setMinClusterSize","setAverageCenter","setTexts","setCalculator","setStyles","image","infoWindowOptions","onMouseOut","onMouseOver","opacity","title","addMarker","removeMarker","setImage","setClickable","setOpacity","setTitle","MapMarker","markerImage","MarkerImage","Size","size","width","height","alt","_image$options","coords","_image$options2","offset","Point","_image$options4","_image$options5","shape","_image$options6","spriteOrigin","_image$options8","_image$options9","spriteSize","_image$options11","_image$options12","markerPosition","KakaoRoadviewContext","infoPosition","xAnchor","yAnchor","overlayPosition","overlay","KakaoCustomOverlay","CustomOverlay","ReactDOM","ControlPosition","TOPRIGHT","mapTypeControl","MapTypeControl","addControl","removeControl","RIGHT","ZoomControl","radius","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeStyle","strokeWeight","onMouseover","onMouseout","onMousemove","onMousedown","circleCenter","circle","Circle","setRadius","setOptions","path","endArrow","polyLinePath","every","v","Array","polyline","Polyline","setPath","polygonPath","polygon","Polygon","bounds","rectangleBounds","LatLngBounds","sw","ne","rectangle","Rectangle","setBounds","rx","ry","ellipseCenter","ellipse","Ellipse","draw","onAdd","onRemove","reactAbstractOverlay","ReactAbstractOveraly","subClass","superClass","create","AbstractOverlay","super","useRoadview","pan","panoId","panoX","panoY","tilt","zoom","onInit","onPanoidChange","onPositionChanged","onViewpointChange","onErrorGetNearestPanoId","isLoading","setIsLoading","roadview","setRoadview","RoadviewContainer","kakaoRoadview","Roadview","getPosition","getLat","getLng","newPostion","RoadviewClient","getNearestPanoId","setPanoId","getPanoId","prevViewpoint","getViewpoint","setViewpoint","DrawingManagerContext","Viewpoint","useDrawingManagerEvent","DrawingManager","arrowOptions","circleOptions","ellipseOptions","markerOptions","polygonOptions","polylineOptions","rectangleOptions","drawingMode","guideTooltip","onSelect","onDrawstart","onDraw","onDrawend","onDrawnext","onCancle","onStateChanged","drawingManager","drawing","TOP","drawingmanager","toolbox","Toolbox","element","getElement","StaticMap","mapContainer","_marker","isArray","mk","kakaoStaticMap"],"sourceRoot":""}