{"version":3,"file":"static/js/591.de8304cf.chunk.js","mappings":"sJAcKA,E,uCCRQC,EAAuC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACrD,OACE,iBAAMC,KAAM,QAASC,UAAU,2BAA/B,SACGF,GAGN,ECJYG,EAAiC,SAAC,GAIxC,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,WAEA,OACE,mBACEL,KAAM,SACNC,UAAS,mFACPE,EACI,gCACA,mCALR,SAQGC,EAAU,aAAeC,GAG/B,E,yCFXIR,SAAAA,GAAAA,EAAAA,SAAAA,WAAAA,EAAAA,SAAAA,UAAAA,CAAAA,CAAAA,IAAAA,EAAAA,CAAAA,IA0FL,MArFA,WAA0B,IAAD,UACvB,GACES,EAAAA,EAAAA,IAA4B,CAC1BC,KAAM,aAFFC,EAAR,EAAQA,SAAqBC,GAA7B,EAAkBC,UAAlB,EAA6BD,WAAWE,EAAxC,EAAwCA,aAYxC,OAZA,EAAsDC,OAIrCC,EAAAA,EAAAA,OASf,iBAAKZ,UAAU,qDAAf,WACE,SAAC,KAAD,WACE,4FAEF,iBAAKA,UAAU,yDAAf,WACE,gBAAKa,IAAKC,EAAWd,UAAU,aAAae,IAAI,eAChD,eAAIf,UAAU,yCAAd,qCAGA,kBACEA,UAAU,8BACVgB,SAAUN,GAfD,WACf,OAAO,IACR,IAWK,WAIE,oCACMH,EAAS,QAAS,CACpBU,SAAU,oBACVC,QACE,0JAJN,IAMEC,KAAK,QACLC,YAAY,QACZpB,UAAU,6BAEsB,aAAjC,UAAAQ,EAAUa,OAAOC,aAAjB,eAAwBH,QACvB,SAACtB,EAAD,CAAWC,aAAc,gCAE1B,UAAAU,EAAUa,OAAOC,aAAjB,eAAwBC,WACvB,SAAC1B,EAAD,CACEC,aAAY,UAAEU,EAAUa,OAAOC,aAAnB,aAAE,EAAwBC,WAI1C,oCACMhB,EAAS,WAAY,CACvBU,SAAU,uBACVO,UAAW,MAHf,IAKEL,KAAK,WACLC,YAAY,WACZpB,UAAU,YAEX,UAAAQ,EAAUa,OAAOI,gBAAjB,eAA2BF,WAC1B,SAAC1B,EAAD,CACEC,aAAY,UAAEU,EAAUa,OAAOI,gBAAnB,aAAE,EAA2BF,WAG7C,qCAAYhB,EAAS,SAArB,IAA8BP,UAAU,QAAxC,SACG0B,OAAOC,KAAK/B,GAAUgC,KAAI,SAACC,EAAOC,GACjC,OAAO,4BAAoBD,GAAPC,EACrB,QAEH,SAAC7B,EAAD,CACEC,SAAUM,EAAUuB,QACpB3B,WAAY,iBACZD,SAAS,QAMb,sDAC2B,KACzB,SAAC,KAAD,CAAM6B,GAAI,IAAKhC,UAAU,iCAAzB,wCAOT,C","sources":["pages/common/CreateAccountPage.tsx","components/form-error.tsx","components/button.tsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormError } from '../../components/form-error';\nimport { Button } from '../../components/button';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport kurlyLogo from '../../assets/images/kurlyChaser.png';\n\ninterface ICreateAccountForm {\n  email: string;\n  password: string;\n  role: UserRole;\n}\n\nenum UserRole {\n  Customer = 'Customer',\n  Delivery = 'Delivery',\n}\n\nfunction CreateAccount() {\n  const { register, getValues, formState, handleSubmit, watch } =\n    useForm<ICreateAccountForm>({\n      mode: 'onChange',\n    });\n  const navigate = useNavigate();\n  const onCompleted = () => {\n    return null;\n  };\n\n  const onSubmit = () => {\n    return null;\n  };\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n      <Helmet>\n        <title>컬리체이서 | 회원가입</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\n        <img src={kurlyLogo} className=\"w-52 mb-10\" alt=\"kurlyLogo\"></img>\n        <h4 className=\" w-full font-medium text-left text-3xl\">\n          Welcome Kurly's Chaser\n        </h4>\n        <form\n          className=\"grid gap-3 mt-5 w-full mb-5\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input\n            {...register('email', {\n              required: 'Email is required',\n              pattern:\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            })}\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"input transition-colors\"\n          ></input>\n          {formState.errors.email?.type === 'pattern' && (\n            <FormError errorMessage={'Please Enter a Valid Email'}></FormError>\n          )}\n          {formState.errors.email?.message && (\n            <FormError\n              errorMessage={formState.errors.email?.message}\n            ></FormError>\n          )}\n\n          <input\n            {...register('password', {\n              required: 'Password is required',\n              minLength: 10,\n            })}\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input\"\n          ></input>\n          {formState.errors.password?.message && (\n            <FormError\n              errorMessage={formState.errors.password?.message}\n            ></FormError>\n          )}\n          <select {...register('role')} className=\"input\">\n            {Object.keys(UserRole).map((value, iter) => {\n              return <option key={iter}>{value}</option>;\n            })}\n          </select>\n          <Button\n            canClick={formState.isValid}\n            actionText={'Create Account'}\n            loading={false}\n          ></Button>\n          {/* {\n                        <FormError errorMessage={\"컬리체이서 | 로그인\"}></FormError>\n                } */}\n        </form>\n        <div>\n          Already have an account?{' '}\n          <Link to={'/'} className=\"text-green-600 hover:underline\">\n            Sing in an Account\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateAccount;\n","import React from 'react';\n\ninterface IFormErrorProps {\n  errorMessage?: string;\n}\n\nexport const FormError: React.FC<IFormErrorProps> = ({ errorMessage }) => {\n  return (\n    <span role={'alert'} className=\"font-medium text-red-500\">\n      {errorMessage}\n    </span>\n  );\n};\n","import React from 'react';\n\ninterface IButtonProps {\n  canClick: boolean;\n  loading: boolean;\n  actionText: string;\n}\n\nexport const Button: React.FC<IButtonProps> = ({\n  canClick,\n  loading,\n  actionText,\n}) => {\n  return (\n    <button\n      role={'button'}\n      className={`text-white text-lg focus:outline-none font-medium py-4 transition-colors ${\n        canClick\n          ? 'bg-lime-600 hover:bg-lime-700'\n          : 'bg-gray-300 pointer-events-none'\n      }`}\n    >\n      {loading ? 'Loading...' : actionText}\n    </button>\n  );\n};\n"],"names":["UserRole","FormError","errorMessage","role","className","Button","canClick","loading","actionText","useForm","mode","register","formState","getValues","handleSubmit","watch","useNavigate","src","kurlyLogo","alt","onSubmit","required","pattern","type","placeholder","errors","email","message","minLength","password","Object","keys","map","value","iter","isValid","to"],"sourceRoot":""}