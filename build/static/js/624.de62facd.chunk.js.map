{"version":3,"file":"static/js/624.de62facd.chunk.js","mappings":"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","sources":["components/delivery/main/MainHeader.tsx","libs/utils/mock.ts","components/delivery/main/DeliveryInfomation.tsx","components/delivery/main/KakaoMap.tsx","container/DeliveryMainContainer.tsx","pages/delivery/DeliveryMainPage.tsx"],"sourcesContent":["import { BellIcon, MenuIcon } from 'assets/icons';\nimport { KurlySmallLogo } from 'assets/images';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Path from 'routes/Path';\nimport styled from 'styled-components';\n\nfunction MainHeader() {\n  return (\n    <HeaderContainer>\n      {/* id 필요 */}\n      <Box>\n        <Link to={Path.DELIVERY_MENU}>\n          <MenuIcon />\n        </Link>\n        <LogoStyled to={Path.DELIVERY_MAIN}>\n          <img src={KurlySmallLogo} alt=\"사이트 로고\" />\n        </LogoStyled>\n      </Box>\n      <Link to={Path.DELIVERY_NOTICE}>\n        <BellIcon />\n      </Link>\n    </HeaderContainer>\n  );\n}\n\nconst HeaderContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: 56px;\n  padding: 0 24px;\n`;\n\nconst Box = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 72px;\n`;\n\nconst LogoStyled = styled(Link)`\n  img {\n    width: 44px;\n    height: 28px;\n  }\n`;\n\nexport default MainHeader;\n","import {\n  GrayBalloonImage,\n  PurpleBalloonImage,\n  RedBalloonImage,\n  YellowBalloonImage,\n} from 'assets/images';\n\nexport const deliveryList = [\n  {\n    id: 1,\n    address: ' 서울시 서울특별시 영등포구 여의대로 108 ',\n    lat: 37.56567,\n    lng: 126.967667,\n    comment: '빨리와주세요.',\n    entrancePassword: '1234*',\n    orderNumber: 'WW123451235125',\n    total: 4,\n    branch: 'difference',\n    marker: RedBalloonImage,\n  },\n  {\n    id: 2,\n    address: ' 서울시 서울특별시 강서구 양천로 5 ',\n    lat: 37.565,\n    lng: 126.975,\n    comment: '천천히 와주세요.',\n    entrancePassword: '1234*',\n    orderNumber: 'WW123451235125',\n    total: 2,\n    branch: 'complaint',\n    marker: PurpleBalloonImage,\n  },\n  {\n    id: 3,\n    address: ' 서울시 서울특별시 동작구 사당대로 5 ',\n    lat: 37.568,\n    lng: 126.983,\n    comment: '문 앞에 놔둬주세요.',\n    entrancePassword: '1234*',\n    orderNumber: 'WW123451235125',\n    total: 2,\n    branch: 'undelivery',\n    marker: YellowBalloonImage,\n  },\n  {\n    id: 4,\n    address: ' 서울시 서울특별시 강남구  ',\n    lat: 37.567,\n    lng: 126.983,\n    comment: '.',\n    entrancePassword: '1234*',\n    orderNumber: 'WW123451235125',\n    total: 2,\n    branch: 'undelivery',\n    marker: RedBalloonImage,\n  },\n  {\n    id: 5,\n    address: ' 서울시 서울특별시 강북구 ',\n    lat: 37.56467,\n    lng: 126.976667,\n    comment: '빨리와주세요.',\n    entrancePassword: '1234*',\n    orderNumber: 'WW123451235125',\n    total: 4,\n    branch: 'difference',\n    marker: GrayBalloonImage,\n  },\n];\n","import { XIcon } from 'assets/icons';\nimport Button from 'components/common/Button';\nimport { deliveryList } from 'libs/utils/mock';\nimport { Delivery } from 'model/delivery';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Path from 'routes/Path';\nimport styled from 'styled-components';\n\ninterface Props {\n  selectedOrder: number;\n}\n\nfunction DeliveryInfomation({ selectedOrder }: Props) {\n  const navigate = useNavigate();\n  return (\n    <InfomationSection>\n      <TitleContainer>\n        <Title>상세 정보</Title>\n        <XIcon />\n      </TitleContainer>\n      {deliveryList.map(\n        (delivery: Delivery) =>\n          delivery.id === selectedOrder && (\n            <CategoryList key={delivery.id}>\n              <Category>\n                상세주소\n                <CategoryContent>{delivery.address}</CategoryContent>\n              </Category>\n              <Category>\n                배송 메시지\n                <CategoryContent>{delivery.comment}</CategoryContent>\n              </Category>\n              <Category>\n                공동 현관 비밀번호\n                <CategoryContent>{delivery.entrancePassword}</CategoryContent>\n              </Category>\n              <Category>\n                운송장 내역\n                <CategoryContent>{delivery.orderNumber}</CategoryContent>\n              </Category>\n              <Category>\n                제품 수량\n                <CategoryContent>{delivery.total}</CategoryContent>\n              </Category>\n            </CategoryList>\n          ),\n      )}\n\n      <FullViewButton\n        variant=\"longWhite\"\n        onClick={() => navigate(Path.DELIVERY_DETAIL)}\n      >\n        전체보기\n      </FullViewButton>\n    </InfomationSection>\n  );\n}\n\nconst InfomationSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 16px 16px 0px 0px;\n  position: relative;\n  bottom: 58px;\n  background: white;\n  z-index: 99;\n  padding: 24px 20px;\n  width: 360px;\n`;\n\nconst Title = styled.h2`\n  ${({ theme }) => theme.textStyle.bold[2028]};\n`;\n\nconst CategoryList = styled.ul``;\n\nconst Category = styled.li`\n  ${({ theme }) => theme.textStyle.regular[1420]};\n  color: ${({ theme }) => theme.palette.gray500};\n  margin-top: 16px;\n`;\n\nconst CategoryContent = styled.div`\n  margin-top: 7px;\n  color: ${({ theme }) => theme.palette.gray800};\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  width: 320px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FullViewButton = styled(Button)`\n  margin-top: 16px;\n`;\n\nexport default DeliveryInfomation;\n","import React, { useEffect, useState } from 'react';\nimport { Map, MapMarker } from 'react-kakao-maps-sdk';\nimport styled from 'styled-components';\nimport {\n  PurpleRectangle,\n  RedRectangle,\n  WhiteRectangle,\n  YellowRectangle,\n} from 'assets/icons';\nimport { Delivery } from 'model/delivery';\nimport deliveryStorage from 'libs/utils/deliveryStorage';\n// import { getCoordinate } from 'libs/utils/location';\n\ninterface DeliveryList {\n  deliveryList: Delivery[];\n  setSelectedOrder: (id: number) => void;\n}\n\nfunction KakaoMap({ deliveryList, setSelectedOrder }: DeliveryList) {\n  const imageSize = { width: 18, height: 22 };\n  const spriteSize = { width: 18, height: 22 };\n\n  const deliveryState = [\n    {\n      text: '배송 완료',\n      icon: <WhiteRectangle />,\n    },\n    {\n      text: '배송 예정',\n      icon: <PurpleRectangle />,\n    },\n    {\n      text: '재배송',\n      icon: <YellowRectangle />,\n    },\n    {\n      text: '미배송 수거',\n      icon: <RedRectangle />,\n    },\n  ];\n  // const [positionList, setPositionList] = useState([]);\n  // deliveryList.map((delivery) => {\n  //   const { address } = delivery;\n  //   getCoordinate({ address, setPositionList });\n  // });\n\n  return (\n    <KakaoMapWrapper>\n      <Map // 지도를 표시할 Container\n        center={{\n          // 지도의 중심좌표\n          lat: 37.565,\n          lng: 126.975,\n        }}\n        style={{\n          // 지도의 크기\n          width: '100%',\n          height: '404px',\n        }}\n        level={5} // 지도의 확대 레벨\n      >\n        <DeliveryStateBar>\n          {deliveryState.map(({ text, icon }) => (\n            <DeliveryStateList key={`Delivery state ${text}`}>\n              {icon}\n              <DeliveryStateText>{text}</DeliveryStateText>\n            </DeliveryStateList>\n          ))}\n        </DeliveryStateBar>\n        {deliveryList.map((delivery, index) => (\n          <MapMarker\n            position={{\n              // 마커가 표시될 위치입니다\n              lat: delivery.lat,\n              lng: delivery.lng,\n            }}\n            key={index}\n            image={{\n              src: delivery.marker,\n              size: imageSize,\n              options: {\n                spriteSize: spriteSize,\n              },\n            }}\n            onClick={() => {\n              deliveryStorage.remove();\n              deliveryStorage.set(delivery);\n              setSelectedOrder(delivery.id);\n            }}\n          />\n        ))}\n        {/* {deliveryList?.map((delivery, index) => {\n          const { address } = delivery;\n          const getResult = async () => {\n            console.log(result);\n            const result = await getCoordinate(address);\n          };\n          return (\n            <MapMarker\n              position={{\n                // 마커가 표시될 위치입니다\n                lat: 37.566,\n                lng: 126.978,\n              }}\n              key={index}\n              image={{\n                src: markerImageSrc[0],\n                size: imageSize,\n                options: {\n                  spriteSize: spriteSize,\n                },\n              }}\n              // onClick={() => console.log('marker', lat, lng)}\n            />\n          );\n        })} */}\n      </Map>\n    </KakaoMapWrapper>\n  );\n}\n\nconst DeliveryStateBar = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  height: 40px;\n  background: rgba(0, 0, 0, 0.2);\n  position: relative;\n  z-index: 9;\n  bottom: 405px;\n  ${({ theme }) => theme.textStyle.medium[1420]};\n`;\n\nconst DeliveryStateList = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  z-index: 99;\n`;\n\nconst DeliveryStateText = styled.span`\n  margin-left: 8px;\n`;\n\nconst KakaoMapWrapper = styled.div`\n  width: 360px;\n  height: 404px;\n`;\n\nexport default KakaoMap;\n","import { useQuery } from '@tanstack/react-query';\nimport client from 'apis/client';\nimport DeliveryInfomation from 'components/delivery/main/DeliveryInfomation';\nimport KakaoMap from 'components/delivery/main/KakaoMap';\nimport { deliveryList } from 'libs/utils/mock';\nimport { queryKeys } from 'libs/utils/queryKeys';\nimport userStorage from 'libs/utils/userStorage';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction DeliveryMainContainer() {\n  const { id } = useParams();\n  const [selectedOrder, setSelectedOrder] = useState(-1);\n\n  // const getOrderList = async (id: any) => {\n  //   const response = await client.get(`/orders/${id}`);\n  //   return response.data;\n  // };\n\n  // const { data: deliveryList } = useQuery(\n  //   [queryKeys.deliveryList],\n  //   () => getOrderList(id),\n  //   {\n  //     cacheTime: 5 * 1000 * 60,\n  //     staleTime: 5 * 1000 * 60,\n  //   },\n  // );\n\n  // console.log(deliveryList);\n\n  return (\n    <>\n      <KakaoMap\n        deliveryList={deliveryList}\n        setSelectedOrder={setSelectedOrder}\n      />\n      <DeliveryInfomation selectedOrder={selectedOrder} />\n    </>\n  );\n}\nexport default DeliveryMainContainer;\n","import MainHeader from 'components/delivery/main/MainHeader';\nimport DeliveryMainContainer from 'container/DeliveryMainContainer';\nimport React from 'react';\nimport { Helmet } from 'react-helmet-async';\n\nfunction DeliveryMainPage() {\n  return (\n    <div>\n      <Helmet>\n        <title>컬리체이서 | 배송기사 메인페이지 </title>\n      </Helmet>\n      <MainHeader />\n      <DeliveryMainContainer />\n    </div>\n  );\n}\n\nexport default DeliveryMainPage;\n"],"names":["HeaderContainer","styled","Box","LogoStyled","Link","to","Path","src","KurlySmallLogo","alt","deliveryList","id","address","lat","lng","comment","entrancePassword","orderNumber","total","branch","marker","RedBalloonImage","PurpleBalloonImage","YellowBalloonImage","GrayBalloonImage","InfomationSection","Title","theme","textStyle","bold","CategoryList","Category","regular","palette","gray500","CategoryContent","gray800","TitleContainer","FullViewButton","Button","selectedOrder","navigate","useNavigate","map","delivery","variant","onClick","DeliveryStateBar","medium","DeliveryStateList","DeliveryStateText","KakaoMapWrapper","setSelectedOrder","imageSize","width","height","spriteSize","deliveryState","text","icon","center","style","level","index","position","image","size","options","deliveryStorage","useParams","useState"],"sourceRoot":""}